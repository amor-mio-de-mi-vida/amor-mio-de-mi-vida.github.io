<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-10-07T14:07:29.842Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Manual Neural Networks</title>
    <link href="http://example.com/2024/10/07/course/DLSystem/Manual%20Neural%20Networks/"/>
    <id>http://example.com/2024/10/07/course/DLSystem/Manual%20Neural%20Networks/</id>
    <published>2024-10-07T12:11:45.799Z</published>
    <updated>2024-10-07T14:07:29.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="from-linear-to-nonlinear-hypothesis-classes"><a class="markdownIt-Anchor" href="#from-linear-to-nonlinear-hypothesis-classes"></a> From linear to nonlinear hypothesis classes</h2><p><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241007202008.png"                        alt=""                  ><br /><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241007201939.png"                        alt=""                  ><br />How can we create the feature function <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span></p><ul><li>Through manual engineering of features relevant to the problem (the “old” way of doing machine learning)</li><li>In a way that itself is learned from data (the “new” way of doing ML)</li></ul><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi (x)=\sigma (W^Tx)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>∈</mo><msup><mi>R</mi><mrow><mi>n</mi><mo>×</mo><mi>d</mi></mrow></msup></mrow><annotation encoding="application/x-tex">W\in R^{n\times d}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72243em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span></span> and <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo>:</mo><msup><mi mathvariant="double-struck">R</mi><mi>d</mi></msup><mo>→</mo><msup><mi mathvariant="double-struck">R</mi><mi>d</mi></msup></mrow><annotation encoding="application/x-tex">\sigma: \mathbb{R}^d\rightarrow \mathbb{R}^d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span></span></span></span> is essentially any nonlinear function.</p><blockquote><p>when we essentially apply almost any non-linear function as our choice of sigma, we basically allow ourselves to get much richer representations than we can with this linear classifier.</p></blockquote><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>θ</mi><mi>T</mi></msup><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>W</mi><mi>T</mi></msup><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h_{\theta}(x)=\theta^T\sigma(W^Tx)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p><p>Neural networks effectively, in this interpretation, can be viewed as a way of extracting features of our data in a manner where we train simultaneously both the final linear classifier as well as all the parameters of the feature vector itself.</p><h2 id="neural-networks"><a class="markdownIt-Anchor" href="#neural-networks"></a> Neural networks</h2><p>A neural network refers to a particular type of hypothesis class consisting of multiple, parameterized differentiable functions composed together in any manner to from the output.</p><h3 id="two-layer-neural-network"><a class="markdownIt-Anchor" href="#two-layer-neural-network"></a> two layer neural network</h3><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲&amp;h_{\theta}(x)…'>\begin{align}&amp;h_{\theta}(x) = W_2^T\sigma (W_1^Tx) \\&amp;\theta ={W_1\in \mathbb{R}^{n\times d}, W_2\in \mathbb{R}^{d\times k}}\end{align}</p><p>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo>:</mo><mi mathvariant="double-struck">R</mi><mo>→</mo><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">\sigma :\mathbb{R}\rightarrow \mathbb{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">R</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">R</span></span></span></span></span> is a nonlinear function applied elementwise to the vector<br />Written in batch matrix form</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>X</mi><msub><mi>W</mi><mn>1</mn></msub><mo stretchy="false">)</mo><msub><mi>W</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">h_{\theta}(X)=\sigma(XW_1)W_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><h3 id="universal-function-approximation"><a class="markdownIt-Anchor" href="#universal-function-approximation"></a> Universal function approximation</h3><p><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241007205212.png"                        alt=""                  ><br />Assume one-hidden-layer ReLU network:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mover accent="true"><mi>f</mi><mo>^</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi><mover><mo><mi><munder><mo><mo>∑</mo></mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></munder></mi></mo><mi>d</mi></mover></mi><mo>±</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><msub><mi>w</mi><mi>i</mi></msub><mi>x</mi><mo>+</mo><msub><mi>b</mi><mi>i</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\hat{f}(x)=\overset{d}{\underset{i=1}{\sum}}\pm max\{0, w_ix + b_i\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2078799999999998em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9578799999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08332999999999999em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.113782em;vertical-align:-1.2776740000000002em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361079999999999em;"><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723259999999997em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0499999999999994em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2776740000000002em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2776740000000002em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">±</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p><p><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241007211543.png"                        alt=""                  ><br />Waiting for replenishment…</p><h3 id="multi-layer-perceptron"><a class="markdownIt-Anchor" href="#multi-layer-perceptron"></a> Multi-layer perceptron</h3><p>in batch form<br /><span></p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 8:  \begin{̲a̲l̲i̲g̲n̲}̲&amp;Z_{i+1}=\sigm…'> \begin{align}&amp;Z_{i+1}=\sigma_i(Z_iW_i),i=1,...,L \\&amp;Z_1=X,\\&amp;h_{\theta}(X)=Z_{L+1}\\&amp;[Z_i\in \mathbb{R}^{m\times n_i},W_i\in \mathbb{R}^{n_i\times n_{i+1}}]\end {align} </p><p>with nonlinearities <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>σ</mi><mi>i</mi></msub><mo>:</mo><mi mathvariant="double-struck">R</mi><mo>→</mo><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">\sigma_i:\mathbb{R}\rightarrow \mathbb{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">R</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">R</span></span></span></span></span> applied elementwise, and parameters</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>θ</mi><mo>=</mo><mrow><msub><mi>W</mi><mn>1</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>W</mi><mi>L</mi></msub></mrow></mrow><annotation encoding="application/x-tex">\theta={W_1,...,W_L}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>&lt;/ span&gt;<br />Can also optionally add bias term</p><h2 id="backpropagation"><a class="markdownIt-Anchor" href="#backpropagation"></a> Backpropagation</h2><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.css" integrity="sha384-GvrOXuhMATgEsSwCs4smul74iXGOixntILdUW9XmUC6+HX0sLNAK3q71HotJqlAn" crossorigin="anonymous">  <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/katex.min.js" integrity="sha384-cpW21h6RZv/phavutF+AuVYrr+dA8xD9zs6FwLpaCct6O9ctzYFfFr4dgmgccOTx" crossorigin="anonymous"></script>  <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.8/dist/contrib/auto-render.min.js" integrity="sha384-+VBxd3r6XgURycqtZ117nYw44OOcIax56Z4dCRWbxyPt0Koah1uHoK0o4+/RRE05" crossorigin="anonymous"></script>  <script>  document.addEventListener("DOMContentLoaded", function() {  renderMathInElement(document.body, {  // customised options  // • auto-render specific keys, e.g.:  delimiters: [  {left: '$$', right: '$$', display: true},  {left: '$', right: '$', display: false},  {left: '\\(', right: '\\)', display: false},  {left: '\\[', right: '\\]', display: true}  ],  // • rendering keys, e.g.:  throwOnError : false  });  });  </script>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;from-linear-to-nonlinear-hypothesis-classes&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#from-linear-to-nonlinear-hypothesis-classes&quot;&gt;&lt;/a&gt; F</summary>
      
    
    
    
    <category term="DLSystem" scheme="http://example.com/categories/DLSystem/"/>
    
    
    <category term="course" scheme="http://example.com/tags/course/"/>
    
  </entry>
  
  <entry>
    <title>ML Refresher &amp; Softmax Regression</title>
    <link href="http://example.com/2024/10/06/course/DLSystem/ML%20Refresher%20&amp;%20Softmax%20Regression/"/>
    <id>http://example.com/2024/10/06/course/DLSystem/ML%20Refresher%20&amp;%20Softmax%20Regression/</id>
    <published>2024-10-06T07:50:07.056Z</published>
    <updated>2024-10-07T14:06:05.231Z</updated>
    
    <content type="html"><![CDATA[<h2 id="three-ingredients-of-a-machine-learning-algorithm"><a class="markdownIt-Anchor" href="#three-ingredients-of-a-machine-learning-algorithm"></a> Three ingredients of a machine learning algorithm</h2><p>Every machine leaning algorithm consists of three different elements</p><ul><li>The hypothesis class: the “program structure”, parameterized via a set of <em>parameters</em>, that describes how we map inputs to outputs.</li><li>The loss function: a function that specifies how “well” a given hypothesis performs on the task of interest.</li><li>An optimization method: a procedure for determining a set of parameters that (approximately) minimize the sum of losses over the training set.</li></ul><h2 id="softmax-regression"><a class="markdownIt-Anchor" href="#softmax-regression"></a> Softmax regression</h2><h3 id="linear-hypothesis-function"><a class="markdownIt-Anchor" href="#linear-hypothesis-function"></a> Linear hypothesis function</h3><p><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241006172352.png"                        alt=""                  ><br /><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241006162754.png"                        alt=""                  ><br /><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241006160438.png"                        alt=""                  ></p><h3 id="loss-function"><a class="markdownIt-Anchor" href="#loss-function"></a> Loss function</h3><p>simple version:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>l</mi><mrow><mi>e</mi><mi>r</mi><mi>r</mi></mrow></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if argmax</mtext><mstyle scriptlevel="0" displaystyle="false"><msub><mrow></mrow><mi>i</mi></msub><msub><mi>h</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>y</mi></mstyle></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">l_{err}(h(x), y)=\begin{cases}0&amp; \text{if argmax$_ih_i(x)=y$} \\1&amp; \text{otherwise}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if argmax</span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">otherwise</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>this loss function is very bad for optimization (selecting the best parameters). It doesn’t provide any information, not differentiable.<br />softmax version:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>z</mi><mi>i</mi></msub><mo>=</mo><mi>p</mi><mo stretchy="false">(</mo><mtext>label</mtext><mo>=</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><msub><mi>h</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><mi><munder><mo><mi><mover><mo><mo>∑</mo></mo><mi>k</mi></mover></mi></mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><msub><mi>h</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext><mi>z</mi><mo>≡</mo><mtext>normalize</mtext><mo stretchy="false">(</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">z_i=p(\text{label}=i)=\frac{exp(h_i(x))}{\underset{j=1}{\overset{k}{\sum}}exp(h_j(x))} \iff z\equiv \text{normalize}(exp(h(x))) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.04398em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord text"><span class="mord">label</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.9668900000000002em;vertical-align:-2.53989em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.536108em;"></span><span class="mord"><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.536108em;"><span style="top:-2.658434em;margin-left:0em;"><span class="pstrut" style="height:3.536108em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.536108em;"><span class="pstrut" style="height:3.536108em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.536108em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span></span></span><span style="top:-3.95em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25001em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.113782em;"><span></span></span></span></span></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span><span style="top:-3.766108em;"><span class="pstrut" style="height:3.536108em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.213108em;"><span class="pstrut" style="height:3.536108em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.53989em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟺</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">normalize</span></span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>l</mi><mrow><mi>c</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><mi>p</mi><mo stretchy="false">(</mo><mtext>label</mtext><mo>=</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mi>h</mi><mi>y</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>log</mi><mo>⁡</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><msub><mi>h</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">l_{ce}(h(x), y)=-\log p(\text{label}=y)=-h_y(x)+\log \sum_{j=1}^kexp(h_j(x))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord text"><span class="mord">label</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.2498900000000006em;vertical-align:-1.4137769999999998em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><h3 id="the-softmax-regression-optimization-problem"><a class="markdownIt-Anchor" href="#the-softmax-regression-optimization-problem"></a> The softmax regression optimization problem</h3><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi></mo><mi>θ</mi></munder></mi><mfrac><mn>1</mn><mi>m</mi></mfrac><mi><munder><mo><mi><mover><mo><mo>∑</mo></mo><mi>m</mi></mover></mi></mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mi>l</mi><mo stretchy="false">(</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mi><munder><mo><mi>m</mi><mi>i</mi><mi>n</mi><mi>i</mi><mi>m</mi><mi>i</mi><mi>z</mi><mi>e</mi></mo><mi>θ</mi></munder></mi><mfrac><mn>1</mn><mi>m</mi></mfrac><mi><munder><mo><mi><mover><mo><mo>∑</mo></mo><mi>m</mi></mover></mi></mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></munder></mi><mi>l</mi><mo stretchy="false">(</mo><msup><mi>θ</mi><mi>T</mi></msup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(\theta) = \underset{\theta}{minimize} \frac{1}{m}\underset{i=1}{\overset{m}{\sum}}l(h_{\theta}(x^{(i)}), y^{(i)}) = \underset{\theta}{minimize} \frac{1}{m}\underset{i=1}{\overset{m}{\sum}}l(\theta^T x^{(i)}, y^{(i)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.9290660000000006em;vertical-align:-1.2776739999999998em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span style="top:-2.347892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">minimi</span><span class="mord mathnormal">ze</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513920000000006em;"><span style="top:-2.4737180000000007em;margin-left:0em;"><span class="pstrut" style="height:3.6513920000000004em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.651392000000001em;"><span class="pstrut" style="height:3.6513920000000004em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513920000000004em;"><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.55001em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2776739999999998em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.9290660000000006em;vertical-align:-1.2776739999999998em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.65952em;"><span style="top:-2.347892em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">minimi</span><span class="mord mathnormal">ze</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521079999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513920000000006em;"><span style="top:-2.4737180000000007em;margin-left:0em;"><span class="pstrut" style="height:3.6513920000000004em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.651392000000001em;"><span class="pstrut" style="height:3.6513920000000004em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513920000000004em;"><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op" style="position:relative;top:-0.000004999999999977245em;">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.55001em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2776739999999998em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241006163715.png"                        alt=""                  ><br />To minimize a function, the gradient descent algorithm proceeds by iteratively taking steps in the direction of the negative gradient</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>θ</mi><mo>:</mo><mo>=</mo><mi>θ</mi><mo>−</mo><mi>α</mi><msub><mi mathvariant="normal">∇</mi><mi>θ</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\theta:=\theta-\alpha \nabla_{\theta}f(\theta) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span></span></p><p>where <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\alpha &gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> is a step or <em>learning rate</em>.<br /><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241006164633.png"                        alt=""                  ><br />So, how do we compute the gradient for the softmax objective?</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mi>θ</mi></msub><msub><mi>l</mi><mrow><mi>c</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><msup><mi>θ</mi><mi>T</mi></msup><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>?</mtext></mrow><annotation encoding="application/x-tex">\nabla_{\theta}l_{ce}(\theta^Tx, y)=\text{?}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1413309999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord text"><span class="mord">?</span></span></span></span></span></span></p><p>for vector <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">h \in \mathbb{R}^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.849108em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathbb">R</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span></p><p class='katex-block katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲\frac{\partial…'>\begin{align}\frac{\partial l_{ce}(h, y)}{\partial h_i} &amp;= \frac{\partial}{\partial h_i}(-h_y + \log \overset{k}{\underset{j=1}{\sum}}exp(h_j)) \\&amp;= -1_{i=y} + \frac{\frac{\partial}{\partial h_i}(\underset{j=1}{\overset{k}{\sum}}exp(h_j))}{\underset{j=1}{\overset{k}{\sum}}exp(h_j)}  \\&amp;= -1_{i=y} + \frac{exp(h_i)}{\underset{j=1}{\overset{k}{\sum}}exp(h_j)}\end{align}</p><p>hence</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">∇</mi><mi>h</mi></msub><msub><mi>l</mi><mrow><mi>c</mi><mi>e</mi></mrow></msub><mo stretchy="false">(</mo><mi>h</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>z</mi><mo>−</mo><msub><mi>e</mi><mi>y</mi></msub><mtext> </mtext><mi>z</mi><mo>=</mo><mtext>normalize</mtext><mo stretchy="false">(</mo><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mi>h</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\nabla_hl_{ce}(h,y)=z-e_y\text{ }z=\text{normalize}(exp(h))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">∇</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.01968em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">e</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord text"><span class="mord"> </span></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">normalize</span></span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241006172044.png"                        alt=""                  ><br /><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241006172447.png"                        alt=""                  ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;three-ingredients-of-a-machine-learning-algorithm&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#three-ingredients-of-a-machine-learning-algor</summary>
      
    
    
    
    <category term="DLSystem" scheme="http://example.com/categories/DLSystem/"/>
    
    
    <category term="course" scheme="http://example.com/tags/course/"/>
    
  </entry>
  
  <entry>
    <title>人月神话</title>
    <link href="http://example.com/2024/10/06/book/%E4%BA%BA%E6%9C%88%E7%A5%9E%E8%AF%9D/"/>
    <id>http://example.com/2024/10/06/book/%E4%BA%BA%E6%9C%88%E7%A5%9E%E8%AF%9D/</id>
    <published>2024-10-06T03:26:01.132Z</published>
    <updated>2024-10-06T03:26:38.682Z</updated>
    
    <content type="html"><![CDATA[<h2 id="焦油坑"><a class="markdownIt-Anchor" href="#焦油坑"></a> 焦油坑</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;焦油坑&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#焦油坑&quot;&gt;&lt;/a&gt; 焦油坑&lt;/h2&gt;
</summary>
      
    
    
    
    
    <category term="book" scheme="http://example.com/tags/book/"/>
    
  </entry>
  
  <entry>
    <title>Make</title>
    <link href="http://example.com/2024/10/05/tools/Make/"/>
    <id>http://example.com/2024/10/05/tools/Make/</id>
    <published>2024-10-05T09:15:52.289Z</published>
    <updated>2024-10-06T03:10:28.073Z</updated>
    
    <content type="html"><![CDATA[<h2 id="example"><a class="markdownIt-Anchor" href="#example"></a> Example</h2><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">objects = main.o kbd.o command.o display.o \</span><br><span class="line">          insert.o search.o files.o utils.o</span><br><span class="line"></span><br><span class="line">edit : <span class="variable">$(objects)</span></span><br><span class="line">        cc -o edit <span class="variable">$(objects)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(objects)</span> : defs.h</span><br><span class="line">kbd.o command.o files.o : command.h</span><br><span class="line">display.o insert.o search.o files.o : buffer.h</span><br><span class="line"></span><br><span class="line">.PHONY : clean</span><br><span class="line">clean :</span><br><span class="line">        -rm edit <span class="variable">$(objects)</span></span><br></pre></td></tr></table></figure><p>注：最后一个命令前面的<code>-</code>指忽略报错信息执行该命令</p><h2 id="writing-makefile"><a class="markdownIt-Anchor" href="#writing-makefile"></a> Writing Makefile</h2><h3 id="makefile中的内容"><a class="markdownIt-Anchor" href="#makefile中的内容"></a> Makefile中的内容</h3><ul><li><code>explicit rule</code>说明了何时以及如何重新制作一个或多个文件，这些文件被称为 <code>target </code>。它列出了 <code>target</code> 所依赖的其他文件，这些文件被称为 <code>prerequisites</code> ，并且可能还提供了用于创建或更新<code> target</code> 的命令。</li><li><code>implicit rule</code> 说明了何时以及如何根据文件名重新制作一类文件。它描述了 <code>target </code>如何可能依赖于一个与 <code>target</code> 名称相似的文件，并给出了创建或更新此类 <code>target</code> 的配方。</li><li><code>variable definition</code>是一个指定文本字符串值的行，该值可以稍后替换到文本中。</li><li><code>directive</code>是一条指示make在读取Makefile时执行特殊操作的指令。这些包括：<ul><li>读取另一个 makefile 文件</li><li>决定（基于变量值）是否使用或忽略Makefile的一部分</li><li>从包含多行的字符串定义一个变量</li></ul></li></ul><h3 id="引用其他makefile文件"><a class="markdownIt-Anchor" href="#引用其他makefile文件"></a> 引用其他makefile文件</h3><p>include 指令告诉 make 暂停读取当前的 makefile，并在继续之前读取一个或多个其他 makefile。该指令是 makefile 中的一行，如下所示：</p><figure class="highlight make"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">include</span> filenames...</span><br></pre></td></tr></table></figure><p>使用 include 指令的一个场合是，由各个目录中的各个 makefile 处理的多个程序需要使用一组通用的变量定义或模式规则。<br />另一个这样的场合是当您想要从源文件自动生成先决条件时；先决条件可以放在主 makefile 包含的文件中。这种做法通常比以某种方式将先决条件附加到主 makefile 末尾的做法更干净，就像其他版本的 make 传统上所做的那样。<br />如果指定的名称不是以斜杠开头，并且在当前目录中找不到该文件，则会搜索其他几个目录。首先，搜索您使用“-I”或“–include-dir”选项指定的任何目录。然后按以下顺序搜索以下目录（如果存在）：prefix/include（通常为 /usr/local/include 1）/usr/gnu/include、/usr/local/include、/usr/include。 INCLUDE_DIRS 变量将包含 make 将搜索包含文件的当前目录列表。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;example&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#example&quot;&gt;&lt;/a&gt; Example&lt;/h2&gt;
&lt;figure class=&quot;highlight make&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;</summary>
      
    
    
    
    
    <category term="make" scheme="http://example.com/tags/make/"/>
    
    <category term="tools" scheme="http://example.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>MLSys 2024</title>
    <link href="http://example.com/2024/10/04/paper/MLSys%20paper/"/>
    <id>http://example.com/2024/10/04/paper/MLSys%20paper/</id>
    <published>2024-10-04T10:34:44.433Z</published>
    <updated>2024-10-05T08:15:58.849Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mlsys-2024"><a class="markdownIt-Anchor" href="#mlsys-2024"></a> MLSys 2024</h2><ul><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/054de805fcceb78a201f5e9d53c85908-Abstract-Conference.html"  title="paper title">Punica: Multi-Tenant LoRA Serving<i class="fas fa-external-link-alt"></i></a> Lequn Chen, Zihao Ye, Yongji Wu, Danyang Zhuo, Luis Ceze, Arvind Krishnamurthy</li><li>[ ] -  <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/096b1019463f34eb241e87cfce8dfe16-Abstract-Conference.html"  title="paper title">ACROBAT: Optimizing Auto-batching of Dynamic Deep Learning at Compile Time<i class="fas fa-external-link-alt"></i></a> Pratik Fegade, Tianqi Chen, Phillip Gibbons, Todd Mowry</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/0badcb4e95306df76a719409155e46e8-Abstract-Conference.html"  title="paper title">HeteroSwitch: Characterizing and Taming System-Induced Data Heterogeneity in Federated Learning<i class="fas fa-external-link-alt"></i></a> Gyudong Kim, Mehdi Ghasemi, Soroush Heidari, Seungryong Kim, Young Geun Kim, Sarma Vrudhula, Carole-Jean Wu</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/136b9a13861308c8948cd308ccd02658-Abstract-Conference.html"  title="paper title">JIT-Q: Just-in-time Quantization with Processing-In-Memory for Efficient ML Training<i class="fas fa-external-link-alt"></i></a> Mohamed Ibrahim, Shaizeen Aga, Ada Li, Suchita Pati, Mahzabeen Islam</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/185087ea328b4f03ea8fd0c8aa96f747-Abstract-Conference.html"  title="paper title">Schrodinger’s FP Training Neural Networks with Dynamic Floating-Point Containers<i class="fas fa-external-link-alt"></i></a> Milos Nikolic, Enrique Torres Sanchez, Jiahui Wang, Ali Hadi Zadeh, Mostafa Mahmoud, Ameer Abdelhadi, Kareem Ibrahim, Andreas Moshovos</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/339caf45a6fa281cae8adc6465343464-Abstract-Conference.html"  title="paper title">Lancet: Accelerating Mixture-of-Experts Training via Whole Graph Computation-Communication Overlapping<i class="fas fa-external-link-alt"></i></a> Chenyu Jiang, Ye Tian, Zhen Jia, Shuai Zheng, Chuan Wu, Yida Wang</li><li>[ ]  <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/42a452cbafa9dd64e9ba4aa95cc1ef21-Abstract-Conference.html"  title="paper title">AWQ: Activation-aware Weight Quantization for On-Device LLM Compression and Acceleration<i class="fas fa-external-link-alt"></i></a> Ji Lin, Jiaming Tang, Haotian Tang, Shang Yang, Wei-Ming Chen, Wei-Chen Wang, Guangxuan Xiao, Xingyu Dang, Chuang Gan, Song Han</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/45c1f6a8cbf2da59ebf2c802b4f742cd-Abstract-Conference.html"  title="paper title">DiffusionPipe: Training Large Diffusion Models with Efficient Pipelines<i class="fas fa-external-link-alt"></i></a> Ye Tian, Zhen Jia, Ziyue Luo, Yida Wang, Chuan Wu</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/48fecef47b19fe501d27d338b6d52582-Abstract-Conference.html"  title="paper title">Keyformer: KV Cache reduction through key tokens selection for Efficient Generative Inference<i class="fas fa-external-link-alt"></i></a> Muhammad Adnan, Akhil Arunkumar, Gaurav Jain, Prashant Nair, Ilya Soloveychik, Purushotham Kamath</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/4e3157021c5f833bb2204081f1dda573-Abstract-Conference.html"  title="paper title">Accelerating ReLU for MPC-Based Private Inference with a Communication-Efficient Sign Estimation<i class="fas fa-external-link-alt"></i></a> Kiwan Maeng, G. Edward Suh</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/5321b1dabcd2be188d796c21b733e8c7-Abstract-Conference.html"  title="paper title">FlashDecoding++: Faster Large Language Model Inference with Asynchronization, Flat GEMM Optimization, and Heuristics<i class="fas fa-external-link-alt"></i></a> Ke Hong, Guohao Dai, Jiaming Xu, Qiuli Mao, Xiuhong Li, Jun Liu, kangdi chen, Yuhan Dong, Yu Wang</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/5431dca75a8d2abc1fb51e89e8324f10-Abstract-Conference.html"  title="paper title">HeteGen: Efficient Heterogeneous Parallel Inference for Large Language Models on Resource-Constrained Devices<i class="fas fa-external-link-alt"></i></a> ZHAO XUANLEI, Bin Jia, Haotian Zhou, Ziming Liu, Shenggan Cheng, Yang You</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/554e056fe2b6d9fd27ffcd3367ae1267-Abstract-Conference.html"  title="paper title">CloudEval-YAML: A Practical Benchmark for Cloud Configuration Generation<i class="fas fa-external-link-alt"></i></a> Yifei Xu, Yuning Chen, Xumiao Zhang, Xianshang Lin, Pan Hu, Yunfei Ma, Songwu Lu, Wan Du, Zhuoqing Mao, Ennan Zhai, Dennis Cai</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/5edb57c05c81d04beb716ef1d542fe9e-Abstract-Conference.html"  title="paper title">Atom: Low-Bit Quantization for Efficient and Accurate LLM Serving<i class="fas fa-external-link-alt"></i></a> Yilong Zhao, Chien-Yu Lin, Kan Zhu, Zihao Ye, Lequn Chen, Size Zheng, Luis Ceze, Arvind Krishnamurthy, Tianqi Chen, Baris Kasikci</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/621d0fd41c720ab252e178b77c200d90-Abstract-Conference.html"  title="paper title">ACCURATE LOW-DEGREE POLYNOMIAL APPROXIMATION OF NON-POLYNOMIAL OPERATORS FOR FAST PRIVATE INFERENCE IN HOMOMORPHIC ENCRYPTION<i class="fas fa-external-link-alt"></i></a> Jingtian Dang, Jianming Tong, Anupam Golder, Cong “Callie” Hao, Arijit Raychowdhury, Tushar Krishna</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/698cfaf72a208aef2e78bcac55b74328-Abstract-Conference.html"  title="paper title">SiDA: Sparsity-Inspired Data-Aware Serving for Efficient and Scalable Large Mixture-of-Experts Models<i class="fas fa-external-link-alt"></i></a> Zhixu Du, Shiyu Li, Yuhao Wu, Xiangyu Jiang, Jingwei Sun, Qilin Zheng, Yongkai Wu, Ang Li, Hai Li, Yiran Chen</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/71381211d0abef73ed1887b83c4547b1-Abstract-Conference.html"  title="paper title">Does Compressing Activations Help Model Parallel Training?<i class="fas fa-external-link-alt"></i></a> Song Bian, Dacheng Li, Hongyi Wang, Eric Xing, Shivaram Venkataraman</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/75bb91b908e6924763c9f2bbe87e921e-Abstract-Conference.html"  title="paper title">Distributed Matrix-Based Sampling for Graph Neural Network Training<i class="fas fa-external-link-alt"></i></a> Alok Tripathy, Katherine Yelick, Aydin Buluc</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/78834433edc3291f4c6cbbd2759324db-Abstract-Conference.html"  title="paper title">Disaggregated Multi-Tower: Topology-aware Modeling Technique for Efficient Large Scale Recommendation<i class="fas fa-external-link-alt"></i></a> Liang Luo, Buyun Zhang, Michael Tsang, Yinbin Ma, Ching-Hsiang Chu, Yuxin Chen, Shen Li, Yuchen Hao, Yanli Zhao, Guna Lakshminarayanan, Ellie Wen, Jongsoo Park, Dheevatsa Mudigere, Maxim Naumov</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/87eaaa8605a1a472d9a9756e7500517b-Abstract-Conference.html"  title="paper title">VQPy: An Object-Oriented Approach to Modern Video Analytics<i class="fas fa-external-link-alt"></i></a> Shan Yu, Zhenting Zhu, Yu Chen, Hanchen Xu, Pengzhan Zhao, Yang Wang, Arthi Padmanabhan, Hugo Latapie, Harry Xu</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/906419cd502575b617cc489a1a696a67-Abstract-Conference.html"  title="paper title">SLoRA: Scalable Serving of Thousands of LoRA Adapters<i class="fas fa-external-link-alt"></i></a> Ying Sheng, Shiyi Cao, Dacheng Li, Coleman Hooper, Nicholas Lee, Shuo Yang, Christopher Chou, Banghua Zhu, Lianmin Zheng, Kurt Keutzer, Joseph Gonzalez, Ion Stoica</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/9069a8976ff06f6443e7f4172990a580-Abstract-Conference.html"  title="paper title">L-GreCo: Layerwise-adaptive Gradient Compression For Efficient Data-parallel Deep Learning<i class="fas fa-external-link-alt"></i></a> Ilia Markov, Kaveh Alim, Elias Frantar, Dan Alistarh</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/a66caa1703fe34705a4368c3014c1966-Abstract-Conference.html"  title="paper title">Prompt Cache: Modular Attention Reuse for Low-Latency Inference<i class="fas fa-external-link-alt"></i></a> In Gim, Guojun Chen, Seung-seob Lee, Nikhil Sarda, Anurag Khandelwal, Lin Zhong</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/b0131b6ee02a00b03fc3320176fec8f5-Abstract-Conference.html"  title="paper title">Fine-Tuning Language Models Using Formal Methods Feedback: A Use Case in Autonomous Systems<i class="fas fa-external-link-alt"></i></a> Yunhao Yang, Neel P. Bhatt, Tyler Ingebrand, William Ward, Steven Carr, Atlas Wang, Ufuk Topcu</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/b74a8de47d2b3c928360e0a011f48351-Abstract-Conference.html"  title="paper title">VIDUR: A LARGE-SCALE SIMULATION FRAMEWORK FOR LLM INFERENCE<i class="fas fa-external-link-alt"></i></a> Amey Agrawal, Nitin Kedia, Jayashree Mohan, Ashish Panwar, Nipun Kwatra, Bhargav Gulavani, Ramachandran Ramjee, Alexey Tumanov</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/b8bf2c0dd0b48511889b7d3b2c5fc8f5-Abstract-Conference.html"  title="paper title">Torch2Chip: An End-to-end Customizable Deep Neural Network Compression and Deployment Toolkit for Prototype Hardware Accelerator Design<i class="fas fa-external-link-alt"></i></a> Jian Meng, Yuan Liao, Anupreetham Anupreetham, Ahmed Hasssan, Shixing Yu, Han-sok Suh, Xiaofeng Hu, Jae-sun Seo</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/bbb7506579431a85861a05fff048d3e1-Abstract-Conference.html"  title="paper title">Q-Hitter: A Better Token Oracle for Efficient LLM Inference via Sparse-Quantized KV Cache<i class="fas fa-external-link-alt"></i></a> Zhenyu Zhang, Shiwei Liu, Runjin Chen, Bhavya Kailkhura, Beidi Chen, Atlas Wang</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/bbd7d8bd780fcf7143add2317ba04638-Abstract-Conference.html"  title="paper title">FedTrans: Efficient Federated Learning via Multi-Model Transformation<i class="fas fa-external-link-alt"></i></a> Yuxuan Zhu, Jiachen Liu, Mosharaf Chowdhury, Fan Lai</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/c2a0e26dd9ee7d57e92bb1c24b39659a-Abstract-Conference.html"  title="paper title">LIFL: A Lightweight, Event-driven Serverless Platform for Federated Learning<i class="fas fa-external-link-alt"></i></a> Shixiong Qi, K. K. Ramakrishnan, Myungjin Lee</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/c66a9db149261435664284a20b6f1d42-Abstract-Conference.html"  title="paper title">Proteus: Preserving Model Confidentiality during Graph Optimizations<i class="fas fa-external-link-alt"></i></a> Yubo Gao, Maryam Haghifam, Christina Giannoula, Renbo Tu, Gennady Pekhimenko, Nandita Vijaykumar</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/c74b624843218d9b6713fcf299d6d5e4-Abstract-Conference.html"  title="paper title">QMoE: Sub-1-Bit Compression of Trillion Parameter Models<i class="fas fa-external-link-alt"></i></a> Elias Frantar, Dan Alistarh</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/d5a655b8b373737b4f2aea8f78e5e754-Abstract-Conference.html"  title="paper title">vMCU: Coordinated Memory Management and Kernel Optimization for DNN Inference on MCUs<i class="fas fa-external-link-alt"></i></a> Size Zheng, Renze Chen, Meng Li, Zihao Ye, Luis Ceze, Yun Liang</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/dcb38c6ad7911842ab31081be9540b89-Abstract-Conference.html"  title="paper title">UniDM: A Unified Framework for Data Manipulation with Large Language Models<i class="fas fa-external-link-alt"></i></a> Yichen Qian, Yongyi He, Rong Zhu, Jintao Huang, Zhijian Ma, Haibin Wang, Yaohua Wang, Xiuyu Sun, Defu Lian, Bolin Ding, Jingren Zhou</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/dea9b4b6f55ae611c54065d6fc750755-Abstract-Conference.html"  title="paper title">Efficient Post-training Quantization with FP8 Formats<i class="fas fa-external-link-alt"></i></a> Haihao Shen, Naveen Mellempudi, Xin He, Qun Gao, Chang Wang, Mengni Wang</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/eb261df4322a8bd0a73093c4d8a0d02d-Abstract-Conference.html"  title="paper title">COMET: Neural Cost Model Explanation Framework<i class="fas fa-external-link-alt"></i></a> Isha Chaudhary, Alex Renda, Charith Mendis, Gagandeep Singh</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/f03cb785864596fa5901f1359d23fd81-Abstract-Conference.html"  title="paper title">On Latency Predictors for Neural Architecture Search<i class="fas fa-external-link-alt"></i></a> Yash Akhauri, Mohamed Abdelfattah</li><li>[ ] <a class="link"   href="https://proceedings.mlsys.org/paper_files/paper/2024/hash/f502981cbe221d857ad409450a7917c3-Abstract-Conference.html"  title="paper title">FLASH: Fast Model Adaptation in ML-Centric Cloud Platforms<i class="fas fa-external-link-alt"></i></a> Haoran Qiu, Weichao Mao, Archit Patke, Shengkun Cui, Chen Wang, Hubertus Franke, Zbigniew Kalbarczyk, Tamer Basar, Ravi Iyer</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;mlsys-2024&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#mlsys-2024&quot;&gt;&lt;/a&gt; MLSys 2024&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;[ ] &lt;a class=&quot;link&quot;   href=&quot;https://procee</summary>
      
    
    
    
    
    <category term="paper" scheme="http://example.com/tags/paper/"/>
    
    <category term="idea" scheme="http://example.com/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Ideas</title>
    <link href="http://example.com/2024/10/04/paper/Ideas/"/>
    <id>http://example.com/2024/10/04/paper/Ideas/</id>
    <published>2024-10-04T10:30:32.391Z</published>
    <updated>2024-10-06T03:08:47.283Z</updated>
    
    <content type="html"><![CDATA[<p><strong>How should software systems be designed to support the full machine learning lifecycle, from programming interfaces and data preprocessing to output interpretation, debugging and monitoring?</strong></p><ul><li>How can we enable users to quickly “program” the modern machine learning stack through emerging interfaces such as manipulating or labeling training data, imposing simple priors or constraints, or defining loss functions?</li><li>How can we enable developers to define and measure ML models, architectures, and systems in higher-level ways?</li><li>How can we support efficient development, monitoring, interpretation, debugging, adaptation, tuning, and overall maintenance of production ML applications - including not just models, but the data, features, labels, and other inputs that define them?</li></ul><p><strong>How should hardware systems be designed for machine learning?</strong></p><ul><li>How can we develop specialized, heterogeneous hardware for training and deploying machine learning models, fit to their new operation sets and data access patterns?</li><li>How can we take advantage of the stochastic nature of ML workloads to discover new trade-offs with respect to precision, stability, fidelity, and more?</li><li>How should distributed systems be designed to support ML training and serving?</li></ul><p><strong>How should machine learning systems to be designed to satisfy metrics beyond predictive accuracy such as power and memory efficiency, accessibility, cost, latency, privacy, security, fairness, and interpretability?</strong></p><ul><li><p>How can machine learning algorithms and systems be designed for device constrains such as power, latency, and memory limits?</p></li><li><p>How can ML systems be designed to support full-stack privacy and security guarantees, including, e.g., federated learning and other similar settings?</p></li><li><p>How can we increase the accessibility of ML, to empower an increasingly broad range of users who may be neither ML nor systems experts?</p></li><li><p>部署问题：随着机器学习在越来越多样化和任务关键性的方式中得到使用，一系列系统范围内的关切变得越来越普遍。这些包括对抗性影响或其他虚假因素的鲁棒性；更广泛考虑的安全性；隐私和安全性，尤其是随着敏感数据的越来越多使用；可解释性，因为法律和操作上越来越需要；公平性，因为机器学习算法开始对我们的日常生活产生重大影响；以及许多其他类似的关切。</p></li><li><p>成本：最初默认的解决方案是在ImageNet上学习CNN，其计算成本为2300美元，训练时间为13天。仅对大量训练数据进行标注的成本就可能高达数十万到数百万美元。以其他指标（如延迟或功率）衡量，降低成本对于越来越多的设备和生产部署配置也至关重要。</p></li><li><p>可访问性：随着越来越多的人急于将机器学习用于实际生产目的——包括大学里大型新项目培养的一批新一代多语言数据科学家——机器学习系统需要能够被没有博士学位水平的机器学习和系统专业知识的开发者和组织使用。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;How should software systems be designed to support the full machine learning lifecycle, from programming interfaces and data prep</summary>
      
    
    
    
    
    <category term="paper" scheme="http://example.com/tags/paper/"/>
    
    <category term="idea" scheme="http://example.com/tags/idea/"/>
    
  </entry>
  
  <entry>
    <title>Vim</title>
    <link href="http://example.com/2024/10/03/tools/Vim/"/>
    <id>http://example.com/2024/10/03/tools/Vim/</id>
    <published>2024-10-03T15:24:49.157Z</published>
    <updated>2024-10-06T09:30:11.414Z</updated>
    
    <content type="html"><![CDATA[<p><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241003232510.png"                        alt=""                  ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img  
                       lazyload
                       alt=&quot;image&quot;
                       data-src=&quot;images/Pasted%20image%20202410</summary>
      
    
    
    
    <category term="tools" scheme="http://example.com/categories/tools/"/>
    
    
    <category term="tools" scheme="http://example.com/tags/tools/"/>
    
    <category term="Vim" scheme="http://example.com/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>tmux cheat sheet</title>
    <link href="http://example.com/2024/10/03/tools/Tmux%20cheat%20sheet/"/>
    <id>http://example.com/2024/10/03/tools/Tmux%20cheat%20sheet/</id>
    <published>2024-10-03T13:49:51.763Z</published>
    <updated>2024-10-06T09:30:07.529Z</updated>
    
    <content type="html"><![CDATA[<h2 id="session"><a class="markdownIt-Anchor" href="#session"></a> Session</h2><h3 id="start-a-new-session"><a class="markdownIt-Anchor" href="#start-a-new-session"></a> Start a new session</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">new</span></span><br></pre></td></tr></table></figure><h3 id="start-a-new-session-or-attach-to-an-existing-session-named-mysession"><a class="markdownIt-Anchor" href="#start-a-new-session-or-attach-to-an-existing-session-named-mysession"></a> Start a new session or attach to an existing session named mysession</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux new-session -A -s mysession</span><br></pre></td></tr></table></figure><h3 id="start-a-new-session-with-the-name-mysession"><a class="markdownIt-Anchor" href="#start-a-new-session-with-the-name-mysession"></a> Start a new session with the name mysession</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux new -s mysession</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">new</span> -s mysession</span><br></pre></td></tr></table></figure><h3 id="killdelete-all-sessions-but-the-current"><a class="markdownIt-Anchor" href="#killdelete-all-sessions-but-the-current"></a> kill/delete all sessions but the current</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:kill-session -<span class="keyword">a</span> </span><br></pre></td></tr></table></figure><h3 id="killdelete-all-sessions-but-mysession"><a class="markdownIt-Anchor" href="#killdelete-all-sessions-but-mysession"></a> kill/delete all sessions but mysession</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux kill-session -<span class="keyword">a</span> -t mysession</span><br></pre></td></tr></table></figure><h3 id="rename-session"><a class="markdownIt-Anchor" href="#rename-session"></a> Rename session</h3><p><code>Ctrl</code> + <code>b</code> <code>$</code></p><h3 id="detach-from-session"><a class="markdownIt-Anchor" href="#detach-from-session"></a> Detach from session</h3><p><code>Ctrl</code> + <code>b</code> <code>d</code></p><h3 id="detach-others-on-the-session-maximize-window-by-detach-other-clients"><a class="markdownIt-Anchor" href="#detach-others-on-the-session-maximize-window-by-detach-other-clients"></a> Detach others on the session (Maximize window by detach other clients)</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:attach -d</span><br></pre></td></tr></table></figure><h3 id="show-all-sessions"><a class="markdownIt-Anchor" href="#show-all-sessions"></a> Show all sessions</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><p><code>Ctrl</code> + <code>b</code> <code>s</code></p><h3 id="attach-to-last-session"><a class="markdownIt-Anchor" href="#attach-to-last-session"></a> Attach to last session</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux a</span><br></pre></td></tr></table></figure><h3 id="attach-to-session-with-the-name-mysession"><a class="markdownIt-Anchor" href="#attach-to-session-with-the-name-mysession"></a> Attach to session with the name mysession</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux a -t mysession</span><br></pre></td></tr></table></figure><h3 id="session-and-window-preview"><a class="markdownIt-Anchor" href="#session-and-window-preview"></a> Session and Window Preview</h3><p><code>Ctrl</code> + <code>b</code> <code>w</code></p><h3 id="move-to-previous-session"><a class="markdownIt-Anchor" href="#move-to-previous-session"></a> Move to previous session</h3><p><code>Ctrl</code> + <code>b</code> <code>(</code></p><h3 id="move-to-next-session"><a class="markdownIt-Anchor" href="#move-to-next-session"></a> Move to next session</h3><p><code>Ctro</code> + <code>b</code> <code>)</code></p><h2 id="windows"><a class="markdownIt-Anchor" href="#windows"></a> Windows</h2><h3 id="start-a-new-session-with-the-name-mysession-and-window-mywindow"><a class="markdownIt-Anchor" href="#start-a-new-session-with-the-name-mysession-and-window-mywindow"></a> Start a new session with the name mysession and window mywindow</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux new -s mysession -n mywindow</span><br></pre></td></tr></table></figure><h3 id="create-window"><a class="markdownIt-Anchor" href="#create-window"></a> Create window</h3><p><code>Ctrl</code> + <code>b</code> <code>c</code></p><h3 id="rename-current-window"><a class="markdownIt-Anchor" href="#rename-current-window"></a> Rename current window</h3><p><code>Ctrl</code> + <code>b</code> <code>,</code></p><h3 id="close-current-window"><a class="markdownIt-Anchor" href="#close-current-window"></a> Close current window</h3><p><code>Ctrl</code> + <code>b</code> <code>&amp;</code></p><h3 id="list-windows"><a class="markdownIt-Anchor" href="#list-windows"></a> List windows</h3><p><code>Ctrl</code> + <code>b</code> <code>w</code></p><h3 id="previous-window"><a class="markdownIt-Anchor" href="#previous-window"></a> Previous window</h3><p><code>Ctrl</code> + <code>b</code> <code>p</code></p><h3 id="next-window"><a class="markdownIt-Anchor" href="#next-window"></a> Next window</h3><p><code>Ctrl</code> + <code>b</code> <code>n</code></p><h3 id="switchselect-window-by-number"><a class="markdownIt-Anchor" href="#switchselect-window-by-number"></a> Switch/select window by number</h3><p><code>Ctrl</code> + <code>b</code> <code>0</code> … <code>9</code></p><h3 id="toggle-last-active-window"><a class="markdownIt-Anchor" href="#toggle-last-active-window"></a> Toggle last active window</h3><p><code>Ctrl</code> + <code>b</code> <code>I</code></p><h3 id="reorder-window-swap-window-number-2src-and-1dst"><a class="markdownIt-Anchor" href="#reorder-window-swap-window-number-2src-and-1dst"></a> Reorder window, swap window number 2(src) and 1(dst)</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:swap-window -s <span class="number">2</span> -t <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="move-current-window-to-the-left-by-one-position"><a class="markdownIt-Anchor" href="#move-current-window-to-the-left-by-one-position"></a> Move current window to the left by one position</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:swap-window -t -<span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="move-window-from-source-to-target"><a class="markdownIt-Anchor" href="#move-window-from-source-to-target"></a> Move window from source to target</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">move</span>-window -s src_se<span class="variable">s:win</span> -t target_se<span class="variable">s:win</span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:movew -s foo:<span class="number">0</span> -t bar:<span class="number">9</span></span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:movew -s <span class="number">0</span>:<span class="number">0</span> -t <span class="number">1</span>:<span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="reposition-window-in-the-current-session"><a class="markdownIt-Anchor" href="#reposition-window-in-the-current-session"></a> Reposition window in the current session</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">move</span>-window -s src_session:src_window</span><br></pre></td></tr></table></figure><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">move</span> -s <span class="number">0</span>:<span class="number">9</span></span><br></pre></td></tr></table></figure><h3 id="renumber-windows-to-remove-gap-in-the-sequence"><a class="markdownIt-Anchor" href="#renumber-windows-to-remove-gap-in-the-sequence"></a> Renumber windows to remove gap in the sequence</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:movew -r</span><br></pre></td></tr></table></figure><h2 id="panes"><a class="markdownIt-Anchor" href="#panes"></a> Panes</h2><h3 id="toggle-last-active-pane"><a class="markdownIt-Anchor" href="#toggle-last-active-pane"></a> Toggle last active pane</h3><p><code>Ctrl</code> + <code>b</code> <code>;</code></p><h3 id="split-the-current-pane-with-a-vertical-line-to-create-a-horizontal-layout"><a class="markdownIt-Anchor" href="#split-the-current-pane-with-a-vertical-line-to-create-a-horizontal-layout"></a> Split the current pane with a vertical line to create a horizontal layout</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">split</span>-window -h</span><br></pre></td></tr></table></figure><p><code>Ctrl</code> + <code>b</code> <code>%</code></p><h3 id="split-the-current-with-a-horizontal-line-to-create-a-vertical-layout"><a class="markdownIt-Anchor" href="#split-the-current-with-a-horizontal-line-to-create-a-vertical-layout"></a> Split the current with a horizontal line to create a vertical layout</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">split</span>-window -v</span><br></pre></td></tr></table></figure><p><code>Ctrl</code> + <code>b</code> <code>&quot;</code></p><h3 id="join-two-windows-as-panes-merge-window-2-to-window-1-as-panes"><a class="markdownIt-Anchor" href="#join-two-windows-as-panes-merge-window-2-to-window-1-as-panes"></a> Join two windows as panes (Merge window 2 to window 1 as panes)</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">join</span>-pane -s <span class="number">2</span> -t <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="move-pane-from-one-window-to-another-move-pane-1-from-window-2-to-pane-after-0-of-window-1"><a class="markdownIt-Anchor" href="#move-pane-from-one-window-to-another-move-pane-1-from-window-2-to-pane-after-0-of-window-1"></a> Move pane from one window to another (Move pane 1 from window 2 to pane after 0 of window 1)</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:<span class="keyword">join</span>-pane -s <span class="number">2.1</span> -t <span class="number">1.0</span></span><br></pre></td></tr></table></figure><h3 id="move-the-current-pane-left"><a class="markdownIt-Anchor" href="#move-the-current-pane-left"></a> Move the current pane left</h3><p><code>Ctrl</code> + <code>b</code> <code>&#123;</code></p><h3 id="move-the-current-pane-right"><a class="markdownIt-Anchor" href="#move-the-current-pane-right"></a> Move the current pane right</h3><p><code>Ctrl</code> + <code>b</code> <code>&#125;</code></p><h3 id="switch-to-pane-to-the-direction"><a class="markdownIt-Anchor" href="#switch-to-pane-to-the-direction"></a> Switch to pane to the direction</h3><p><code>Ctrl</code> + <code>b</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span></span></span></span><br /><code>Ctrl</code> + <code>b</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↓</mo></mrow><annotation encoding="application/x-tex">\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↓</span></span></span></span><br /><code>Ctrl</code> + <code>b</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">←</span></span></span></span><br /><code>Ctrl</code> + <code>b</code> <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span></p><h3 id="toggle-synchronize-panessend-command-to-all-panes"><a class="markdownIt-Anchor" href="#toggle-synchronize-panessend-command-to-all-panes"></a> Toggle synchronize-panes(send command to all panes)</h3><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:setw synchronize-panes</span><br></pre></td></tr></table></figure><h3 id="toggle-between-pane-layouts"><a class="markdownIt-Anchor" href="#toggle-between-pane-layouts"></a> Toggle between pane layouts</h3><p><code>Ctrl</code> + <code>b</code> <code>Spacebar</code></p><h3 id="switch-to-next-pane"><a class="markdownIt-Anchor" href="#switch-to-next-pane"></a> Switch to next pane</h3><p><code>Ctrl</code> + <code>b</code> <code>o</code></p><h3 id="show-pane-numbers"><a class="markdownIt-Anchor" href="#show-pane-numbers"></a> Show pane numbers</h3><p><code>Ctrl</code> + <code>b</code> <code>q</code></p><h3 id="switchselect-pane-by-number"><a class="markdownIt-Anchor" href="#switchselect-pane-by-number"></a> Switch/select pane by number</h3><p><code>Ctrl</code> + <code>b </code> <code>q</code> <code>0</code> … <code>9</code></p><h3 id="toggle-pane-zoom"><a class="markdownIt-Anchor" href="#toggle-pane-zoom"></a> Toggle pane zoom</h3><p><code>Ctrl</code> + <code>b</code> <code>z</code></p><h3 id="convert-pane-into-a-window"><a class="markdownIt-Anchor" href="#convert-pane-into-a-window"></a> Convert pane into a window</h3><p><code>Ctrl</code> + <code>b</code> <code>!</code></p><h3 id="resize-current-pane-heightholding-second-key-is-optional"><a class="markdownIt-Anchor" href="#resize-current-pane-heightholding-second-key-is-optional"></a> Resize current pane height(holding second key is optional)</h3><p><code>Ctrl</code> + <code>b</code> + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span></span></span></span><br /><code>Ctrl</code> + <code>b</code> <code>Ctrl</code> + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span></span></span></span><br /><code>Ctrl</code> + <code>b</code> + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↓</mo></mrow><annotation encoding="application/x-tex">\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↓</span></span></span></span><br /><code>Ctrl </code>+ <code>b</code> <code>Ctrl</code> + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↓</mo></mrow><annotation encoding="application/x-tex">\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↓</span></span></span></span></p><h3 id="resize-current-pane-widthholding-second-key-is-optional"><a class="markdownIt-Anchor" href="#resize-current-pane-widthholding-second-key-is-optional"></a> Resize current pane width(holding second key is optional)</h3><p><code>Ctrl</code> + <code>b</code> + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span><br /><code>Ctrl</code> + <code>b</code> <code>Ctrl</code> + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span><br /><code>Ctrl</code> + <code>b</code> + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">←</span></span></span></span><br /><code>Ctrl </code>+ <code>b</code> <code>Ctrl</code> + <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">←</span></span></span></span></p><h3 id="close-current-pane"><a class="markdownIt-Anchor" href="#close-current-pane"></a> Close current pane</h3><p><code>Ctrl</code> + <code>b</code> <code>x</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;session&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#session&quot;&gt;&lt;/a&gt; Session&lt;/h2&gt;
&lt;h3 id=&quot;start-a-new-session&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; hr</summary>
      
    
    
    
    
    <category term="tools" scheme="http://example.com/tags/tools/"/>
    
    <category term="tmux" scheme="http://example.com/tags/tmux/"/>
    
  </entry>
  
  <entry>
    <title>Learning the Basics</title>
    <link href="http://example.com/2024/10/02/tools/Gradle/Authoring%20Gradle%20Builds/Learning%20the%20Basics/"/>
    <id>http://example.com/2024/10/02/tools/Gradle/Authoring%20Gradle%20Builds/Learning%20the%20Basics/</id>
    <published>2024-10-02T08:51:12.705Z</published>
    <updated>2024-10-06T09:31:39.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="gradle-directories"><a class="markdownIt-Anchor" href="#gradle-directories"></a> Gradle Directories</h2><p>Gradle uses two main directories to perform and manage its work: the Gradle User Home directory and the Project Root directory.<br />![[Pasted image 20241002165520.png]]</p><h3 id="gradle-user-home-directory"><a class="markdownIt-Anchor" href="#gradle-user-home-directory"></a> Gradle User Home directory</h3><p>By default, the Gradle User Home (<code>~/.gradle</code> or <code>C:\Users\&lt;USERNAME&gt;\.gradle</code>) stores global configuration properties, initialization scripts, caches, and log files.</p><h2 id="build-lifecycle"><a class="markdownIt-Anchor" href="#build-lifecycle"></a> Build Lifecycle</h2><h2 id="writing-settings-files"><a class="markdownIt-Anchor" href="#writing-settings-files"></a> Writing Settings Files</h2><p>The settings file is the entry point of every Gradle build.<br />![[Pasted image 20241002165822.png]]<br />As the settings script executes, it configures this <code>Settings</code>. Therefore, the <em>settings file</em> defines the <code>Settings</code> object.</p><p>Many top-level properties and blocks in a settings script are part of the Settings API.</p><p>The following table lists a few commonly used properties:</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>buildCache</code></td><td>The build cache configuration.</td></tr><tr><td><code>plugins</code></td><td>The container of plugins that have been applied to the settings.</td></tr><tr><td><code>rootDir</code></td><td>The root directory of the build. The root directory is the project directory of the root project.</td></tr><tr><td><code>rootProject</code></td><td>The root project of the build.</td></tr><tr><td><code>settings</code></td><td>Returns this settings object.</td></tr></tbody></table><p>The following table lists a few commonly used methods:</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>include()</code></td><td>Adds the given projects to the build.</td></tr><tr><td><code>includeBuild()</code></td><td>Includes a build at the specified path to the composite build.</td></tr></tbody></table><h2 id="write-build-scripts"><a class="markdownIt-Anchor" href="#write-build-scripts"></a> Write Build Scripts</h2><p>![[Pasted image 20241002170658.png]]<br />A <strong>build script</strong> configures a <strong>project</strong> and is associated with an object of type Project.</p><p>The following table lists a few commonly used properties:</p><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td><code>String</code></td><td>The name of the project directory.</td></tr><tr><td><code>path</code></td><td><code>String</code></td><td>The fully qualified name of the project.</td></tr><tr><td><code>description</code></td><td><code>String</code></td><td>A description for the project.</td></tr><tr><td><code>dependencies</code></td><td><code>DependencyHandler</code></td><td>Returns the dependency handler of the project.</td></tr><tr><td><code>repositories</code></td><td><code>RepositoryHandler</code></td><td>Returns the repository handler of the project.</td></tr><tr><td><code>layout</code></td><td><code>ProjectLayout</code></td><td>Provides access to several important locations for a project.</td></tr><tr><td><code>group</code></td><td><code>Object</code></td><td>The group of this project.</td></tr><tr><td><code>version</code></td><td><code>Object</code></td><td>The version of this project.</td></tr></tbody></table><p>The following table lists a few commonly used methods:</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><code>uri()</code></td><td>Resolves a file path to a URI, relative to the project directory of this project.</td></tr><tr><td><code>task()</code></td><td>Creates a Task with the given name and adds it to this project.</td></tr></tbody></table><h2 id="using-tasks"><a class="markdownIt-Anchor" href="#using-tasks"></a> Using Tasks</h2><p>The work that Gradle can do on a project is defined by one or more <em>tasks</em>.<br />![[Pasted image 20241002172201.png]]<br />Gradle provides several default tasks for a project, which are listed by running</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew tasks</span><br></pre></td></tr></table></figure><p>Tasks either come from <strong>build scripts</strong> or <strong>plugins</strong>. Once we apply a plugin to our project, such as the <code>application</code> plugin, additional tasks become available:</p><p>To view information about a task, use</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/gradlew <span class="built_in">help</span> --task &lt;task-name&gt;</span><br></pre></td></tr></table></figure><blockquote><p>The calls <code>doFirst</code> and <code>doLast</code> can be executed multiple times. They add an action to the beginning or the end of the task’s actions list. When the task executes, the actions in the action list are executed in order.</p></blockquote><h2 id="writing-tasks"><a class="markdownIt-Anchor" href="#writing-tasks"></a> Writing Tasks</h2><p>To create a task, inherit from the <code>DefaultTask</code> class and implement a <a href="https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/TaskAction.html"><code>@TaskAction</code></a> handler:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CreateFileTask</span> : <span class="type">DefaultTask</span>() &#123;</span><br><span class="line">    <span class="meta">@TaskAction</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">action</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> file = File(<span class="string">&quot;myfile.txt&quot;</span>)</span><br><span class="line">        file.createNewFile()</span><br><span class="line">        file.writeText(<span class="string">&quot;HELLO FROM MY TASK&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A task is <strong>registered</strong> in the build script using the <code>TaskContainer.register()</code> method, which allows it to be then used in the build logic.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CreateFileTask</span> : <span class="type">DefaultTask</span>() &#123;</span><br><span class="line">    <span class="meta">@TaskAction</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">action</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> file = File(<span class="string">&quot;myfile.txt&quot;</span>)</span><br><span class="line">        file.createNewFile()</span><br><span class="line">        file.writeText(<span class="string">&quot;HELLO FROM MY TASK&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.register&lt;CreateFileTask&gt;(<span class="string">&quot;createFileTask&quot;</span>)</span><br></pre></td></tr></table></figure><p>Setting the <strong>group</strong> and <strong>description</strong> properties on your tasks can help users understand how to use your task:</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CreateFileTask</span> : <span class="type">DefaultTask</span>() &#123;</span><br><span class="line">    <span class="meta">@TaskAction</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">action</span><span class="params">()</span></span> &#123;</span><br><span class="line">        <span class="keyword">val</span> file = File(<span class="string">&quot;myfile.txt&quot;</span>)</span><br><span class="line">        file.createNewFile()</span><br><span class="line">        file.writeText(<span class="string">&quot;HELLO FROM MY TASK&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.register&lt;CreateFileTask&gt;(<span class="string">&quot;createFileTask&quot;</span>, ) &#123;</span><br><span class="line">    group = <span class="string">&quot;custom&quot;</span></span><br><span class="line">    description = <span class="string">&quot;Create myfile.txt in the current directory&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>For the task to do useful work, it typically needs some <strong>inputs</strong>. A task typically produces <strong>outputs</strong>.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CreateFileTask</span> : <span class="type">DefaultTask</span>() &#123;</span><br><span class="line">    <span class="meta">@Input</span></span><br><span class="line">    <span class="keyword">val</span> fileText = <span class="string">&quot;HELLO FROM MY TASK&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Input</span></span><br><span class="line">    <span class="keyword">val</span> fileName = <span class="string">&quot;myfile.txt&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@OutputFile</span></span><br><span class="line">    <span class="keyword">val</span> myFile: File = File(fileName)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TaskAction</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">action</span><span class="params">()</span></span> &#123;</span><br><span class="line">        myFile.createNewFile()</span><br><span class="line">        myFile.writeText(fileText)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.register&lt;CreateFileTask&gt;(<span class="string">&quot;createFileTask&quot;</span>) &#123;</span><br><span class="line">    group = <span class="string">&quot;custom&quot;</span></span><br><span class="line">    description = <span class="string">&quot;Create myfile.txt in the current directory&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>A task is optionally <strong>configured</strong> in a build script using the <code>TaskCollection.named()</code> method.</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">CreateFileTask</span> : <span class="type">DefaultTask</span>() &#123;</span><br><span class="line">    <span class="meta">@get:Input</span></span><br><span class="line">    <span class="keyword">abstract</span> <span class="keyword">val</span> fileText: Property&lt;String&gt;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Input</span></span><br><span class="line">    <span class="keyword">val</span> fileName = <span class="string">&quot;myfile.txt&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@OutputFile</span></span><br><span class="line">    <span class="keyword">val</span> myFile: File = File(fileName)</span><br><span class="line"></span><br><span class="line">    <span class="meta">@TaskAction</span></span><br><span class="line">    <span class="function"><span class="keyword">fun</span> <span class="title">action</span><span class="params">()</span></span> &#123;</span><br><span class="line">        myFile.createNewFile()</span><br><span class="line">        myFile.writeText(fileText.<span class="keyword">get</span>())</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.register&lt;CreateFileTask&gt;(<span class="string">&quot;createFileTask&quot;</span>) &#123;</span><br><span class="line">    group = <span class="string">&quot;custom&quot;</span></span><br><span class="line">    description = <span class="string">&quot;Create myfile.txt in the current directory&quot;</span></span><br><span class="line">    fileText.convention(<span class="string">&quot;HELLO FROM THE CREATE FILE TASK METHOD&quot;</span>) <span class="comment">// Set convention</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">tasks.named&lt;CreateFileTask&gt;(<span class="string">&quot;createFileTask&quot;</span>) &#123;</span><br><span class="line">    fileText.<span class="keyword">set</span>(<span class="string">&quot;HELLO FROM THE NAMED METHOD&quot;</span>) <span class="comment">// Override with custom message</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;gradle-directories&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#gradle-directories&quot;&gt;&lt;/a&gt; Gradle Directories&lt;/h2&gt;
&lt;p&gt;Gradle uses two main dir</summary>
      
    
    
    
    <category term="Authoring Gradle Builds" scheme="http://example.com/categories/Authoring-Gradle-Builds/"/>
    
    
    <category term="tools" scheme="http://example.com/tags/tools/"/>
    
    <category term="gradle" scheme="http://example.com/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>Gradle Basics</title>
    <link href="http://example.com/2024/10/02/tools/Gradle/Gradle%20Basics/"/>
    <id>http://example.com/2024/10/02/tools/Gradle/Gradle%20Basics/</id>
    <published>2024-10-02T07:32:31.404Z</published>
    <updated>2024-10-02T08:53:00.659Z</updated>
    
    <content type="html"><![CDATA[<p>Gradle <strong>automates building, testing, and deployment of software</strong> from information in <strong>build scripts</strong>.<br /><img                         lazyload                       alt="image"                       data-src="images/Pasted%20image%2020241002153334.png"                        alt=""                  ></p><h2 id="gradle-project-structure"><a class="markdownIt-Anchor" href="#gradle-project-structure"></a> Gradle Project structure</h2><p>A Gradle project will look similar to the following:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">project</span><br><span class="line">├── gradle                             (1)        </span><br><span class="line">│   ├── libs.versions.toml             (2)</span><br><span class="line">│   └── wrapper</span><br><span class="line">│       ├── gradle-wrapper.jar</span><br><span class="line">│       └── gradle-wrapper.properties</span><br><span class="line">├── gradlew                            (3)</span><br><span class="line">├── gradlew.bat                        (3) </span><br><span class="line">├── settings.gradle(.kts)              (4) </span><br><span class="line">├── subproject-a                   </span><br><span class="line">│   ├── build.gradle(.kts)             (5)     </span><br><span class="line">│   └── src                            (6) </span><br><span class="line">└── subproject-b                        </span><br><span class="line">    ├── build.gradle(.kts)             (5) </span><br><span class="line">    └── src                            (6) </span><br></pre></td></tr></table></figure><p>(1)  Gradle directory to store wrapper files and more<br />(2) Gradle version catalog for dependency management<br />(3) Gradle wrapper scripts<br />(4) Gradle settings file to define a root project name and subprojects<br />(5) Gradle build scripts of the two subprojects - <code>subproject-a</code> and <code>subproject-b</code><br />(6) Source code and/or additional files for the projects</p><p>Gradle Wrapper<br />The Wrapper is a script that invokes a declared version of Gradle and is <strong>the recommended way to execute a Gradle build</strong>. It is found in the project root directory as a <code>gradlew</code> or <code>gradlew.bat</code> file:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gradlew build     // Linux or OSX</span><br><span class="line">gradlew.bat build  // Windows</span><br></pre></td></tr></table></figure><h2 id="gradle-wrapper-basics"><a class="markdownIt-Anchor" href="#gradle-wrapper-basics"></a> Gradle Wrapper Basics</h2><p>The <strong>recommended way to execute any Gradle build</strong> is with the Gradle Wrapper.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── gradle </span><br><span class="line">│   └── wrapper</span><br><span class="line">│       ├── gradle-wrapper.jar         (1)</span><br><span class="line">│       └── gradle-wrapper.properties  (2)</span><br><span class="line">├── gradlew  (3)</span><br><span class="line">└── gradlew.bat (4)</span><br></pre></td></tr></table></figure><p>(1) <code>gradle-wrapper.jar</code>: This is a small JAR file that contains the Gradle Wrapper code. It is responsible for downloading and installing the correct version of Gradle for a project if it’s not already installed.<br />(2) <code>gradle-wrapper.properties</code>: This file contains configuration properties for the Gradle Wrapper, such as the distribution URL (where to download Gradle from) and the distribution type (ZIP or TARBALL).<br />(3) <code>gradlew</code>: This is a shell script (Unix-based systems) that acts as a wrapper around <code>gradle-wrapper.jar</code>. It is used to execute Gradle tasks on Unix-based systems without needing to manually install Gradle.<br />(4) <code>gradlew.bat</code>: This is a batch script (Windows) that serves the same purpose as <code>gradlew</code> but is used on Windows systems.</p><p>If you want to view or update the Gradle version of your project, use the command line. Do not edit the wrapper files manually:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./gradlew --version</span><br><span class="line">./gradlew wrapper --gradle-version 7.2</span><br></pre></td></tr></table></figure><h2 id="command-line-interface-basics"><a class="markdownIt-Anchor" href="#command-line-interface-basics"></a> Command-Line Interface Basics</h2><p>Substitute <code>./gradlew</code> (in macOS / Linux) or <code>gradlew.bat</code> (in Windows) for <code>gradle</code> in the following examples.</p><p>Executing Gradle on the command line conforms to the following structure:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle [taskName...] [--option-name...]</span><br></pre></td></tr></table></figure><p>Options are allowed <em>before</em> and <em>after</em> task names.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle [--option-name...] [taskName...]</span><br></pre></td></tr></table></figure><p>If multiple tasks are specified, you should separate them with a space.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle [taskName1 taskName2...] [--option-name...]</span><br></pre></td></tr></table></figure><p>Options that accept values can be specified with or without <code>=</code> between the option and argument. The use of <code>=</code> is recommended.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle [...] --console=plain</span><br></pre></td></tr></table></figure><p>Options that enable behavior have long-form options with inverses specified with <code>--no-</code>. The following are opposites.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gradle [...] --build-cache</span><br><span class="line">gradle [...] --no-build-cache</span><br></pre></td></tr></table></figure><p>Many long-form options have short-option equivalents. The following are equivalent:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gradle --<span class="built_in">help</span></span><br><span class="line">gradle -h</span><br></pre></td></tr></table></figure><p>To execute a task called <code>taskName</code> on the root project, type:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle :taskName</span><br></pre></td></tr></table></figure><p>To pass an option to a task, prefix the option name with <code>--</code> after the task name:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gradle taskName --exampleOption=exampleValue</span><br></pre></td></tr></table></figure><h2 id="settings-file-basics"><a class="markdownIt-Anchor" href="#settings-file-basics"></a> Settings File Basics</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rootProject.name = <span class="string">&#x27;root-project&#x27;</span>   (<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;sub-project-a&#x27;</span>)            (<span class="number">2</span>)</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;sub-project-b&#x27;</span>)</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;sub-project-c&#x27;</span>)</span><br></pre></td></tr></table></figure><p>(1) Define the project name<br />(2) Add subprojects</p><h2 id="build-file-basics"><a class="markdownIt-Anchor" href="#build-file-basics"></a> Build file Basics</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">plugins &#123;</span><br><span class="line">    id <span class="string">&#x27;application&#x27;</span>                </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">application &#123;</span><br><span class="line">    mainClass = <span class="string">&#x27;com.example.Main&#x27;</span>  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>(1) Add plugins<br />Plugins extend Gradle’s functionality and can contribute tasks to a project.<br />(2) Use convention properties<br />A plugin adds tasks to a project. It also adds properties and methods to a project.The <code>application</code> plugin defines tasks that package and distribute an application, such as the <code>run</code> task.</p><h2 id="dependency-management-basics"><a class="markdownIt-Anchor" href="#dependency-management-basics"></a> Dependency Management Basics</h2><p>To add a dependency to your project, specify a dependency in the dependencies block of your <code>build.gradle(.kts)</code> file.<br />Dependencies in Gradle are grouped by <strong>configurations</strong>.<br />You can view your dependency tree in the terminal using the following command</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew :app:dependencies</span><br></pre></td></tr></table></figure><h2 id="task-basics"><a class="markdownIt-Anchor" href="#task-basics"></a> Task Basics</h2><p>A task represents some <strong>independent unit of work</strong> that a build performs, such as compiling classes, creating a JAR, generating Javadoc, or publishing archives to a repository.<br />You run a Gradle <code>build</code> task using the <code>gradle</code> command or by invoking the Gradle Wrapper (<code>./gradlew</code> or <code>gradlew.bat</code>) in your project directory:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew build</span><br></pre></td></tr></table></figure><p>You can list all the available tasks in the project by running the following command in the terminal:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew tasks</span><br></pre></td></tr></table></figure><p>Many times, a task requires another task to run first. Build scripts can optionally define task dependencies. Gradle then automatically determines the task execution order.</p><h2 id="plugin-basics"><a class="markdownIt-Anchor" href="#plugin-basics"></a> Plugin Basics</h2><p>Gradle is built on a plugin system. Gradle itself is primarily composed of infrastructure, such as a sophisticated dependency resolution engine. The rest of its functionality comes from plugins. A plugin is a piece of software that <strong>provides additional functionality to the Gradle build system</strong>.</p><p>Plugins can be applied to a Gradle build script to <strong>add new tasks, configurations, or other build-related capabilities</strong>:</p><ul><li>Core plugins<br />Gradle Core plugins are a set of plugins that are included in the Gradle distribution itself. These plugins provide essential functionality for building and managing projects.<br />There are many <a class="link"   href="https://docs.gradle.org/current/userguide/plugin_reference.html#plugin_reference" >Gradle Core Plugins<i class="fas fa-external-link-alt"></i></a> users can take advantage of.</li><li>Community plugins<br />Community plugins are plugins developed by the Gradle community, rather than being part of the core Gradle distribution. These plugins provide additional functionality that may be specific to certain use cases or technologies.<br />Community plugins can be published at the <a class="link"   href="http://plugins.gradle.org/" >Gradle Plugin Portal<i class="fas fa-external-link-alt"></i></a>, where other Gradle users can easily discover and use them.</li><li>Local plugins<br />Custom or local plugins are developed and used within a specific project or organization. These plugins are not shared publicly and are tailored to the specific needs of the project or organization.</li></ul><h2 id="incremental-builds-and-build-caching"><a class="markdownIt-Anchor" href="#incremental-builds-and-build-caching"></a> Incremental Builds and Build Caching</h2><p>Incremental builds are always enabled, and the best way to see them in action is to turn on <em>verbose mode</em>. With verbose mode, each task state is labeled during a build:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew compileJava --console=verbose</span><br></pre></td></tr></table></figure><p>The build cache stores previous build results and restores them when needed. It prevents the redundant work and cost of executing time-consuming and expensive processes.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew compileJava --build-cache</span><br></pre></td></tr></table></figure><h2 id="build-scan"><a class="markdownIt-Anchor" href="#build-scan"></a> Build Scan</h2><p>To enable build scans on a gradle command, add <code>--scan</code> to the command line option:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./gradlew build --scan</span><br></pre></td></tr></table></figure><h2 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h2><p><a class="link"   href="https://docs.gradle.org/current/userguide/gradle_wrapper.html#gradle_wrapper_reference" >Gradle Wrapper reference<i class="fas fa-external-link-alt"></i></a><br /><a class="link"   href="https://docs.gradle.org/current/userguide/command_line_interface.html#command_line_interface" >Gradle Command Line Interface reference<i class="fas fa-external-link-alt"></i></a><br /><a class="link"   href="https://docs.gradle.org/current/userguide/writing_settings_files.html#writing_settings_files" >Writing Settings File<i class="fas fa-external-link-alt"></i></a><br /><a class="link"   href="https://docs.gradle.org/current/userguide/writing_build_scripts.html#writing_build_scripts" >Writing Build Scripts<i class="fas fa-external-link-alt"></i></a><br /><a class="link"   href="https://docs.gradle.org/current/userguide/glossary.html#dependency_management_terminology" >Dependency Management chapter<i class="fas fa-external-link-alt"></i></a><br /><a class="link"   href="https://docs.gradle.org/current/userguide/custom_plugins.html#custom_plugins" >Plugin development chapter<i class="fas fa-external-link-alt"></i></a><br /><a class="link"   href="https://docs.gradle.org/current/userguide/build_cache.html#build_cache" >Build cache chapter<i class="fas fa-external-link-alt"></i></a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Gradle &lt;strong&gt;automates building, testing, and deployment of software&lt;/strong&gt; from information in &lt;strong&gt;build scripts&lt;/strong&gt;.&lt;br /&gt;</summary>
      
    
    
    
    
    <category term="tools" scheme="http://example.com/tags/tools/"/>
    
    <category term="gradle" scheme="http://example.com/tags/gradle/"/>
    
  </entry>
  
  <entry>
    <title>RARS</title>
    <link href="http://example.com/2024/10/02/riscv/RARS/RARS/"/>
    <id>http://example.com/2024/10/02/riscv/RARS/RARS/</id>
    <published>2024-10-02T06:59:29.608Z</published>
    <updated>2024-10-06T03:17:48.371Z</updated>
    
    <content type="html"><![CDATA[<h2 id="command-line-tool"><a class="markdownIt-Anchor" href="#command-line-tool"></a> Command Line Tool</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a -- assemble only, do not simulate</span><br><span class="line">ae&lt;n&gt; -- terminate RARS with integer exit code &lt;n&gt; if an assemble error occurs.</span><br><span class="line">ascii -- display memory or register contents interpreted as ASCII codes.</span><br><span class="line">b -- brief - do not display/memory address along with contents.</span><br><span class="line">d -- display RARS debugging statements</span><br></pre></td></tr></table></figure><h2 id="tools"><a class="markdownIt-Anchor" href="#tools"></a> Tools</h2><h3 id="timer-tool"><a class="markdownIt-Anchor" href="#timer-tool"></a> Timer Tool</h3><p>Use this tool to simulate the Memory Mapped IO (MMIO) for a timing device allowing the program to utilize timer interrupts. While this tool is connected to the program it runs a clock (starting from time 0), storing the time in milliseconds. The time is stored as a 64 bit integer and can be accessed (using a lw instruction) at 0xFFFF0018 for the lower 32 bits and 0xFFFF001B for the upper 32 bits.</p><h3 id="keyboard-and-display-mmio-simulator"><a class="markdownIt-Anchor" href="#keyboard-and-display-mmio-simulator"></a> Keyboard and Display MMIO Simulator</h3><h3 id="data-cache-simulation-tool"><a class="markdownIt-Anchor" href="#data-cache-simulation-tool"></a> Data Cache simulation Tool</h3><h3 id="bitmap-display"><a class="markdownIt-Anchor" href="#bitmap-display"></a> Bitmap Display</h3><h3 id="instruction-statistics"><a class="markdownIt-Anchor" href="#instruction-statistics"></a> Instruction Statistics</h3><h3 id="instruction-counter"><a class="markdownIt-Anchor" href="#instruction-counter"></a> Instruction Counter</h3><h3 id="digital-lab-sim"><a class="markdownIt-Anchor" href="#digital-lab-sim"></a> Digital Lab Sim</h3><h3 id="bht-simulator"><a class="markdownIt-Anchor" href="#bht-simulator"></a> BHT Simulator</h3><h3 id="memory-reference-visualization"><a class="markdownIt-Anchor" href="#memory-reference-visualization"></a> Memory Reference Visualization</h3><h3 id="instructionmemory-dump"><a class="markdownIt-Anchor" href="#instructionmemory-dump"></a> Instruction/Memory Dump</h3><h3 id="floating-point-representation"><a class="markdownIt-Anchor" href="#floating-point-representation"></a> Floating Point Representation</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;command-line-tool&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#command-line-tool&quot;&gt;&lt;/a&gt; Command Line Tool&lt;/h2&gt;
&lt;figure class=&quot;highlight text&quot;</summary>
      
    
    
    
    <category term="RARS" scheme="http://example.com/categories/RARS/"/>
    
    
    <category term="riscv" scheme="http://example.com/tags/riscv/"/>
    
  </entry>
  
  <entry>
    <title>DrMIPS Basic</title>
    <link href="http://example.com/2024/10/01/riscv/DrMIPS/DrMIPS%20Basic/"/>
    <id>http://example.com/2024/10/01/riscv/DrMIPS/DrMIPS%20Basic/</id>
    <published>2024-10-01T12:41:27.328Z</published>
    <updated>2024-10-03T05:53:33.319Z</updated>
    
    <content type="html"><![CDATA[<p>本系列文章记录分析开源软件DrMIPS的过程。DrMIPS是MIPS处理器的模拟器。它允许您一步一步地跟踪装配程序的执行。数据路径的图形表示允许您查看处理器在内部的工作方式。</p><p>本篇文章主要记录DrMIPS手册内容以及DrMIPS的功能介绍。</p><h2 id="用户界面"><a class="markdownIt-Anchor" href="#用户界面"></a> 用户界面</h2><h3 id="intro"><a class="markdownIt-Anchor" href="#intro"></a> Intro</h3><p>![[Pasted image 20241003131524.png]]<br />显示的选项卡或窗口是：</p><ul><li>Code：代码编辑器，您可以在其中创建或编辑由模拟器执行的汇编程序。</li><li>Assembled：代码组装成功后，会显示生成的机器指令。</li><li>Registers：列出所有寄存器及其值。</li><li>Data memory：显示数据存储器中的所有值。</li><li>Datapath：数据路径的图形表示及其状态显示在这里。</li></ul><h3 id="code"><a class="markdownIt-Anchor" href="#code"></a> Code</h3><p>这是代码编辑器，您可以在其中编写一个汇编程序。编辑器显示行号，并突出显示有效的语法。</p><p>功能点</p><ul><li><p>撤销/重做更改</p></li><li><p>剪切/复制/粘贴文本</p></li><li><p>在代码中查找/替换单词。</p></li><li><p>可以通过“编辑”菜单或右键单击代码编辑器来访问这些操作。</p></li><li><p>代码可以保存到文件或从文件中读取。这些操作在“文件”菜单中可用。</p></li><li><p>可以按Ctrl+Space键自动完成您正在编写的关键字。这样做会显示一个可以完成该关键字的指令、伪指令、指令和标签列表。</p></li><li><p>显示一个窗口，显示列表中所选关键字的作用以及如何使用它。</p></li><li><p>在空白空间上按Ctrl+空格键将列出所有可用的指令、伪指令、指令和标签。</p></li><li><p>可以在CPU&gt;支持的指令菜单中查看此信息。</p></li><li><p>通过从菜单中选择“执行”&gt;“组装”或按工具栏中的相应按钮来组装程序。</p></li><li><p>如果程序出现错误，消息框将显示第一个错误，并在有错误的行数旁边出现一个感叹号图标。</p></li><li><p>可以将鼠标光标悬停在这些图标上，以发现错误是什么。</p></li><li><p>如果程序正确，则不会显示错误消息，然后可以继续执行它。</p></li></ul><h3 id="assemble"><a class="markdownIt-Anchor" href="#assemble"></a> Assemble</h3><ul><li><p>表格的每一行都对应于一个组装的指令，它包含其地址、机器代码和原始指令。</p></li><li><p>突出显示当前正在执行的指令。</p></li><li><p>如果模拟管道处理器，管道中的所有指令都会以不同的颜色突出显示，每个指令代表不同的阶段。不同的颜色意味着：</p><ul><li>蓝色：指令获取（IF）阶段。</li><li>绿色：指令解码（ID）阶段。</li><li>黄色：执行（EX）阶段。</li><li>红色：内存访问（MEM）阶段。</li><li>品红色：回写（WB）阶段。</li></ul></li><li><p>将鼠标光标悬停在表格中的指令上将呈现一个工具提示。此工具提示显示指令的类型及其字段的值。</p></li><li><p>默认情况下，这些值以十进制格式显示。您可以使用选项卡/窗口底部的组合框将该格式更改为二进制或十六进制。除代码选项卡/窗口外，所有选项卡/窗口都可以使用此组合框。</p></li><li><p>要控制模拟，您可以使用“执行”菜单或工具栏。按Step执行一个指令，按Back step执行一个指令，Run执行整个程序，Restart恢复到第一个指令。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;本系列文章记录分析开源软件DrMIPS的过程。DrMIPS是MIPS处理器的模拟器。它允许您一步一步地跟踪装配程序的执行。数据路径的图形表示允许您查看处理器在内部的工作方式。&lt;/p&gt;
&lt;p&gt;本篇文章主要记录DrMIPS手册内容以及DrMIPS的功能介绍。&lt;/p&gt;
&lt;h2 i</summary>
      
    
    
    
    <category term="DrMIPS" scheme="http://example.com/categories/DrMIPS/"/>
    
    
    <category term="riscv" scheme="http://example.com/tags/riscv/"/>
    
  </entry>
  
  <entry>
    <title>CMake Cookbook Chapter 1</title>
    <link href="http://example.com/2024/10/01/tools/CMake%20Cookbook/CMake%20Cookbook%20Chapter%201/"/>
    <id>http://example.com/2024/10/01/tools/CMake%20Cookbook/CMake%20Cookbook%20Chapter%201/</id>
    <published>2024-10-01T08:15:41.477Z</published>
    <updated>2024-10-02T08:52:34.141Z</updated>
    
    <content type="html"><![CDATA[<h2 id="将单个源文件编译为可执行文件"><a class="markdownIt-Anchor" href="#将单个源文件编译为可执行文件"></a> 将单个源文件编译为可执行文件</h2><h3 id="准备工作"><a class="markdownIt-Anchor" href="#准备工作"></a> 准备工作</h3><p>标准构建命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake -H. -Bbuild</span><br></pre></td></tr></table></figure><p>该命令是跨平台的，使用了<code>-H</code>和<code>-B</code>为CLI选项。<code>-H</code>表示当前目录中搜索根<code>CMakeLists.txt</code>文件。<code>-Bbuild</code>告诉CMake在一个名为<code>build</code>的目录中生成所有的文件。</p><p>GNU/Linux上，CMake默认生成Unix Makefile来构建项目：</p><ul><li><code>Makefile</code>: <code>make</code>将运行指令来构建项目。</li><li><code>CMakefile</code>：包含临时文件的目录，CMake用于检测操作系统、编译器等。此外，根据所选的生成器，它还包含特定的文件。</li><li><code>cmake_install.cmake</code>：处理安装规则的CMake脚本，在项目安装时使用。</li><li><code>CMakeCache.txt</code>：如文件名所示，CMake缓存。CMake在重新运行配置时使用这个文件。</li></ul><h3 id="更多信息"><a class="markdownIt-Anchor" href="#更多信息"></a> 更多信息</h3><p>官方文档 <a class="link"   href="https://cmake.org/runningcmake/" >https://cmake.org/runningcmake/<i class="fas fa-external-link-alt"></i></a> 给出了运行CMake的简要概述。由CMake生成的构建系统，即上面给出的示例中的Makefile，将包含为给定项目构建目标文件、可执行文件和库的目标及规则。<code>hello-world</code>可执行文件是在当前示例中的唯一目标，运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cmake --build . --target <span class="built_in">help</span></span><br><span class="line">The following are some of the valid targets <span class="keyword">for</span> this Makefile:</span><br><span class="line">... all (the default <span class="keyword">if</span> no target is provided)</span><br><span class="line">... clean</span><br><span class="line">... depend</span><br><span class="line">... rebuild_cache</span><br><span class="line">... hello-world</span><br><span class="line">... edit_cache</span><br><span class="line">... hello-world.o</span><br><span class="line">... hello-world.i</span><br><span class="line">... hello-world.s</span><br></pre></td></tr></table></figure><p>CMake生成的目标比构建可执行文件的目标要多。可以使用<code>cmake --build . --target &lt;target-name&gt;</code>语法，实现如下功能：</p><ul><li><strong>all</strong>(或Visual Studio generator中的ALL_BUILD)是默认目标，将在项目中构建所有目标。</li><li><strong>clean</strong>，删除所有生成的文件。</li><li><strong>rebuild_cache</strong>，将调用CMake为源文件生成依赖(如果有的话)。</li><li><strong>edit_cache</strong>，这个目标允许直接编辑缓存。</li></ul><p>对于更复杂的项目，通过测试阶段和安装规则，CMake将生成额外的目标：</p><ul><li><strong>test</strong>(或Visual Studio generator中的<strong>RUN_TESTS</strong>)将在CTest的帮助下运行测试套件。我们将在第4章中详细讨论测试和CTest。</li><li><strong>install</strong>，将执行项目安装规则。我们将在第10章中讨论安装规则。</li><li><strong>package</strong>，此目标将调用CPack为项目生成可分发的包。打包和CPack将在第11章中讨论。</li></ul><h2 id="切换生成器"><a class="markdownIt-Anchor" href="#切换生成器"></a> 切换生成器</h2><p>使用一下命令在平台上找到生成器名单，以及安装的CMake版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><p>显式的使用<code>-G</code>切换生成器</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p build </span><br><span class="line">cd build </span><br><span class="line">cmake -G Ninja ..</span><br></pre></td></tr></table></figure><p>构建项目</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cmake --build .</span><br></pre></td></tr></table></figure><p>与前一个配置相比，每一步的输出没什么变化。每个生成器都有自己的文件集，所以编译步骤的输出和构建目录的内容是不同的：</p><ul><li><code>build.ninja</code>和<code>rules.ninja</code>：包含Ninja的所有的构建语句和构建规则。</li><li><code>CMakeCache.txt</code>：CMake会在这个文件中进行缓存，与生成器无关。</li><li><code>CMakeFiles</code>：包含由CMake在配置期间生成的临时文件。</li><li><code>cmake_install.cmake</code>：CMake脚本处理安装规则，并在安装时使用。</li></ul><p><code>cmake --build .</code>将<code>ninja</code>命令封装在一个跨平台的接口中。</p><h2 id="构建和链接静态库和动态库"><a class="markdownIt-Anchor" href="#构建和链接静态库和动态库"></a> 构建和链接静态库和动态库</h2><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.5</span> FATAL_ERROR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">project</span>(recipe-<span class="number">01</span> LANGUAGES CXX)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_library</span>(<span class="keyword">message</span></span><br><span class="line">STATIC</span><br><span class="line"><span class="keyword">Message</span>.hpp</span><br><span class="line"><span class="keyword">Message</span>.cpp</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">add_executable</span>(hello-world hello-world.cpp)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_link_libraries</span>(hello-world <span class="keyword">message</span>)</span><br></pre></td></tr></table></figure><h3 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h3><ul><li><code>add_library(message STATIC Message.hpp Message.cpp)</code>：生成必要的构建指令，将指定的源码编译到库中。<code>add_library</code>的第一个参数是目标名。整个<code>CMakeLists.txt</code>中，可使用相同的名称来引用库。生成的库的实际名称将由CMake通过在前面添加前缀<code>lib</code>和适当的扩展名作为后缀来形成。生成库是根据第二个参数(<code>STATIC</code>或<code>SHARED</code>)和操作系统确定的。</li><li><code>target_link_libraries(hello-world message)</code>: 将库链接到可执行文件。此命令还确保<code>hello-world</code>可执行文件可以正确地依赖于消息库。因此，在消息库链接到<code>hello-world</code>可执行文件之前，需要完成消息库的构建。<br />编译成功后，构建目录包含<code>libmessage.a</code>一个静态库(在GNU/Linux上)和<code>hello-world</code>可执行文件。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;将单个源文件编译为可执行文件&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#将单个源文件编译为可执行文件&quot;&gt;&lt;/a&gt; 将单个源文件编译为可执行文件&lt;/h2&gt;
&lt;h3 id=&quot;准备工作&quot;&gt;&lt;a class=&quot;markdownIt-Anch</summary>
      
    
    
    
    <category term="CMakeCookbook" scheme="http://example.com/categories/CMakeCookbook/"/>
    
    
    <category term="tools" scheme="http://example.com/tags/tools/"/>
    
    <category term="cmake" scheme="http://example.com/tags/cmake/"/>
    
  </entry>
  
  <entry>
    <title>CMake Cookbook Inrto</title>
    <link href="http://example.com/2024/10/01/tools/CMake%20Cookbook/CMake%20Cookbook%20Inrto/"/>
    <id>http://example.com/2024/10/01/tools/CMake%20Cookbook/CMake%20Cookbook%20Inrto/</id>
    <published>2024-10-01T06:28:26.185Z</published>
    <updated>2024-10-02T08:52:38.444Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h2><p>CMake是一个构建生成器，提供了强大的领域特定语言(DSL)来描述构建系统应该实现的功能。这是CMake的主要优势之一，它允许使用相同的CMake脚本集生成平台原生构建系统。CMake软件工具集，使开发人员可以完全控制给定项目的生命周期：</p><ul><li><strong>CMake</strong>是描述如何在所有主要硬件和操作系统上配置、构建和安装项目，无论是构建可执行文件、库，还是两者都要构建。</li><li><strong>CTest</strong>定义测试、测试套件，并设置应该如何执行。</li><li><strong>CPack</strong>为打包需求提供了DSL。</li><li><strong>CDash</strong>将项目的测试结果在面板中展示。</li></ul><h2 id="覆盖内容"><a class="markdownIt-Anchor" href="#覆盖内容"></a> 覆盖内容</h2><p>我们将讨论以下内容：</p><ul><li>使用CMake配置、构建、测试和安装代码项目</li><li>检测用于条件编译的操作系统、处理器、库、文件和程序</li><li>提高代码的可移植性</li><li>CMake帮助下，将大型代码库重构为模块</li><li>构建多语言项目</li><li>知道如何调整他人编写的CMake配置文件</li><li>打包项目进行发布</li><li>将项目迁移为CMake构建</li></ul><p>CMake管理的项目的工作流发生在许多阶段(time)，我们称之为<em>时序</em>。可以简洁地总结如下图：</p><p><img                         lazyload                       alt="image"                       data-src="/images/Pasted%20image%2020241001143329.png"                        alt="cmake时序"                  ></p><ul><li><strong>CMake time</strong>或<strong>configure time</strong>，是CMake运行时的情况。这个阶段中，CMake将处理项目中的CMakeLists.txt文件并配置它。</li><li><strong>Generation time</strong>配置成功后，CMake将生成本地构建工具所需的脚本，以执行项目中的后续步骤。</li><li><strong>Build time</strong>这是在平台和工具原生构建脚本上调用原生构建工具的时候，这些脚本以前是由CMake生成的。此时，将调用编译器，并在特定的构建目录中构建目标(可执行文件和库)。注意递归的CMake time箭头：这看起来令人困惑，但是我们将在本书中多次使用它，用来实现平台无关的构建。</li><li><strong>CTest time</strong>或 <strong>test time</strong>，运行项目的测试套件，以检查目标是否按预期执行。</li><li><strong>CDash time</strong>或<strong>report time</strong>，将测试结果上传到面板，与其他开发人员共享。</li><li><strong>Install time</strong>，将项目的目标、源文件、可执行文件和库从构建目录安装到安装位置。</li><li><strong>CPack time</strong>或<strong>packaging time</strong>，将项目打包以便发布，可以是源代码，也可以是二进制代码。</li><li><strong>Package install time</strong>，在系统范围内安装新生成的包。</li></ul><h2 id="路线图"><a class="markdownIt-Anchor" href="#路线图"></a> 路线图</h2><p>第1章，从简单的可执行文件到库，如何配置和使用CMake构建简单的可执行文件和库。</p><p>第2章，检测环境，如何使用简单的CMake命令与操作系统和处理器体系结构交互。</p><p>第3章，检测外部库和程序，如何简化对项目依赖项的检测。</p><p>第4章，创建和运行测试，解释如何利用CMake和CTest的功能来定义和运行测试。</p><p>第5章，配置时操作和构建时操作，如何使用CMake在构建过程的不同阶段执行定制化操作。</p><p>第6章，生成源码，CMake命令可自动生成源码。</p><p>第7章，结构化项目，用于组织您的项目，使它们更易于维护。</p><p>第8章，超级构建，解释了CMake超级构建模式，用于管理关键项目的依赖关系。</p><p>第9章，混合语言项目，构建不同编程语言混合的项目。</p><p>第10章，编写一个安装程序，使用CMake安装项目。</p><p>第11章，打包项目，如何使用CPack生成源文件，并将源文件打包，以及构建用于发布的Python和Conda包。</p><p>第12章，生成文档，如何使用CMake也生成代码的文档。</p><p>第13章，选择生成器和交叉编译，如何使用CMake交叉编译项目。</p><p>第14章，测试面板，如何将测试结果报告到在面板上。</p><p>第15章，将项目移植到CMake中，将展示实践示例、注意事项和一些技巧，这些将帮助您将项目移植到基于CMake的构建系统中。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;前言&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#前言&quot;&gt;&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;CMake是一个构建生成器，提供了强大的领域特定语言(DSL)来描述构建系统应该实现的功能。这是CMake的主要优势之一，它允许使用相同的CMa</summary>
      
    
    
    
    <category term="CMakeCookbook" scheme="http://example.com/categories/CMakeCookbook/"/>
    
    
    <category term="tools" scheme="http://example.com/tags/tools/"/>
    
    <category term="cmake" scheme="http://example.com/tags/cmake/"/>
    
  </entry>
  
  <entry>
    <title>How to read paper</title>
    <link href="http://example.com/2024/09/29/paper/How%20to%20read%20paper/"/>
    <id>http://example.com/2024/09/29/paper/How%20to%20read%20paper/</id>
    <published>2024-09-29T07:44:15.500Z</published>
    <updated>2024-10-02T08:45:57.772Z</updated>
    
    <content type="html"><![CDATA[<h2 id="structure"><a class="markdownIt-Anchor" href="#structure"></a> Structure</h2><ul><li>title</li><li>abstract</li><li>introduction</li><li>method</li><li>experiment</li><li>conclusion</li></ul><h2 id="pass-1"><a class="markdownIt-Anchor" href="#pass-1"></a> Pass 1</h2><p>title——是否相关？<br />abstract——论文在做什么？<br />conclusion</p><p>略看论文的图和表<br />论文在大概讲什么东西，方法怎么样，结果怎么样，是否适合自己？</p><h2 id="pass-2"><a class="markdownIt-Anchor" href="#pass-2"></a> Pass 2</h2><p>主要关注重点的图和表<br />相关的重要文献标记</p><p>继续思考论文的质量以及和自己研究方向的契合程度，决定一下要不要进行第三遍的完完全全彻底的精读。</p><h2 id="pass-3"><a class="markdownIt-Anchor" href="#pass-3"></a> Pass 3</h2><p>代入自己去思考如果要是我来写这篇文章，我会如何组织这个结构？读实验部分的时候，可以思考一下，作者是如何描述自己的实验的，你可以思考，如果换自己来做的话，能不能比作者做得更好？ 这一遍读的时候，一定要明白作者每句话，每个字在说什么，并且最好可以脑补出它整个流程是什么样子的，似乎是自己在做实验，写论文一样。如果有困难的话，可以借助思维导图或者流程图这样的工具，把他的整个流程以可视化的形式展现出来，帮助自己理解。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;structure&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#structure&quot;&gt;&lt;/a&gt; Structure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;title&lt;/li&gt;
&lt;li&gt;abstract&lt;/li&gt;
&lt;li&gt;introduction</summary>
      
    
    
    
    
    <category term="paper" scheme="http://example.com/tags/paper/"/>
    
  </entry>
  
  <entry>
    <title>The Pragmatic Programmer</title>
    <link href="http://example.com/2024/09/27/book/The%20Pragmatic%20Programmer/"/>
    <id>http://example.com/2024/09/27/book/The%20Pragmatic%20Programmer/</id>
    <published>2024-09-27T15:04:41.139Z</published>
    <updated>2024-10-05T07:53:49.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="intro"><a class="markdownIt-Anchor" href="#intro"></a> Intro</h2><p>在《程序员修炼之道》一书中，Dave 和Andy将告诉我们怎样以一种我们能够遵循的方式编程。他们何以能这样聪明?他们不也是和其他序员一样，专注于各种细节而已吗?答案是他们在做某件事情时，会把注意力投注在他们在做的事情上——然后他们会试着把它做得更好。<br />设想你在参加 一个会议。或许你在想，这个会议没完没了，你还不如去写程序。而Dave 和 Andy 会想，他们为什么在开会，他们想知道是否可以通过另外的方式取代会议，并决定是否可 使某样事情自动化，以使开会的工作推后。然后他们就会这样去做。<br />这就是Dave 和Andy思考的方式。开会并非是某种使他们远离编程的事情。开会就是编程， 并且是能够加以改善的编程。我之所以知道他们以这样的方式思考，是因为这是书中的第 二条提示：思考你的工作。<br />那么再设想一下，他们这样思考了几年。很快他们就会拥有一堆解决方案。现在设想他们在工作中使用这些解决方案，又是几年;他们还放弃了其中太过困难、或者不能总是产生结果的解 决方案。噢，这样的途径几乎定义了“pragmatic” (注重实效)的含义。现在设想他们又用了一 两年来写下他们的解决方案。你也许会想，这些信息可真是金矿。你想对了。</p><h2 id="goals"><a class="markdownIt-Anchor" href="#goals"></a> Goals</h2><ul><li><p><strong>每年学习一门新语言</strong></p><p>不同的语言以不同的方式解决相同的问题。多学习几种不同的解决方法，能帮助自己拓宽思维，避免陷入陈规。此外，要感谢丰富的免费软件，让我们学习多种语言非常容易。</p></li><li><p><strong>每月读一本技术书</strong></p><p>虽然网络上有大量的短文和偶尔可靠的答案，但深入理解还是需要去读长篇的书。浏览书店页面后挑选和你当前项目主体相关的技术图书。一旦你养成习惯，就一个月读一本。在你掌握了当前正在使用的所有技术后，扩展你的领域，学习一些和你的项目不相关的东西。</p></li><li><p><strong>还要读非技术书</strong></p><p>记住，计算机是由人来使用的，你做的事情是为了满足人的需要，这非常重要。和你一起工作的是人，雇佣你的也是人，黑你的也是人。不要忘记方程式中的人的那一面。他需要完全不同的技能集（我们称这些为软技能，听起来很容易，但实际上他们很硬核，难以掌握）</p></li><li><p><strong>上课</strong></p><p>在本地大学或是网上找一些有趣的课程，或许也能在下一场商业会展或是技术会议上找到。</p></li><li><p><strong>加入本地的用户组和交流群</strong></p><p>不要只是去当听众，要主动参与。独来独往对你的职业生涯是致命的；了解一下公司之外的人们都在做什么。</p></li><li><p><strong>尝试不同的环境</strong></p><p>如果你只在Windows下工作，那么就花点时间在Linux上。如果你只使用简单的编辑器和Makefile，那就试试最新的炫酷复杂的IDE，反之亦然。</p></li><li><p><strong>与时俱进</strong></p><p>关心一下和你当前项目不同的技术，阅读相关的新闻和技术贴。这是一种很好的方式，可以了解用到那些不同技术的人的经验及他们所用的特殊术语，等等。</p></li></ul><p>你是否在项目中使用过这些技术并不重要，甚至要不要把他们放在你的简历中也不重要。学习的过程将会扩展你的思维，为你打开全新可能性的大门，让你领悟新的做事方式。想法的交叉传授是很重要的；试着把你领悟到的东西应用到你当前的项目中。即使项目没有用到某项技术，你也可以借鉴一些方法。例如，熟悉面向对象，你就可以用不同的方式来编写朴素的C程序，理解函数式编程范式，就能用不同的方式来写Java等等。</p><h2 id="批判性思维"><a class="markdownIt-Anchor" href="#批判性思维"></a> 批判性思维</h2><ul><li><p>谁从中受益？<br />虽然听起来有点世俗，不过追踪钱的流动更容易理清脉络。其他人或其他组织的利益可能和你自己的一致，也可能不一致。</p></li><li><p>有什么背景<br />每件事都发生在他自己的背景下，这也是为何“能解决所有问题”的方案通常不存在，而那些兜售“最佳实践”的书或文章实际上经不起推敲。“最适合谁”是一个值得考虑的好问题，类似的还有先决条件是什么、后果是什么，以及是短期的还是长期的。</p></li><li><p>什么时候在哪里可以工作起来<br />在什么情况下？太晚了么？太早了么？不要停留在一阶思维下（接下来会发生什么），要进行二阶思考：当它结束后还会发生什么？</p></li><li><p>为什么这是个问题？<br />是否存在一个基础模型？这个基础模型是怎么工作的？</p></li></ul><h2 id="tips"><a class="markdownIt-Anchor" href="#tips"></a> Tips</h2><h3 id="a-pragmatic-philosophy"><a class="markdownIt-Anchor" href="#a-pragmatic-philosophy"></a> A pragmatic philosophy</h3><ul><li><p><strong>Provide Options, Don’t Make Lame Excuses 提供各种选择，不要找蹩脚的借口</strong></p><p>如果你确实同意要为某个结果负责，你就应切实负起责任。当你犯错误(就如同我们所有人都 会犯错误一样)、或是判断失误时，诚实地承认它，并设法给出各种选择。不要责备别人或别的东西，或是拼凑借口。除了尽你所能以外，你必须分析风险是否超出了你的控制。</p></li><li><p><strong>Don’t Live with Broken Windows 不要容忍破窗户</strong></p><p>不要留着“破窗户” (低劣的设计、错误决策、或是糟糕的代码)不修。发现一个就修一个。 如果没有足够的时间进行适当的修理，就用木板把它钉起来。或许你可以把出问题的代码放人注 释 (comment out)， 或是显示“未实现”消息 ，或是用虚设的数据(dummy data) 加以替代 。 采取某种行动防止进一步的损坏，并说明情势处在你的控制之下。</p></li><li><p><strong>Be a Catalyst for Change 做变化的催化剂</strong></p><p>这正是拿出石头的时候。设计出你可以合理要求的东西，好好开发它。一旦完成，就拿给大家看，让他们大吃一惊。然后说:“要是我们增加…可能就会更好。”假装那并不重要。坐回椅子上，等着他们开始要你增加你本来就想要的功能。人们发现，参与正在发生的成功要更容易。 让他们瞥见未来，你就能让他们聚集在你周围’。</p></li><li><p><strong>Remember the Big Picture 记住大图景</strong></p><p>我们没有做过这个—真的，但有人说，如果你抓一只青蛙放进沸水里，它会一下子跳出来。 但是，如果你把青蛙放进冷水里，然后慢慢加热，青蛙不会注意到温度的缓慢变化，会呆在锅里， 直到被煮熟。</p></li><li><p><strong>Make Quality a Requirements Issue 使质量成为需求问题</strong></p><p>你常常会处在须要进行权衡的情形中。让人惊奇的是 ，许多用户宁愿在今天用上有一些 “ 毛 边” 的软件，也不愿等待 一年后的多媒体版本。许多预算吃紧的T部门都会同意这样的说法。 今天的了不起的软件常常比明天的完美软件更可取。如果你给用户某样东西，让他们及早使用， 他们的反馈常常会把你引向更好的最终解决方案</p></li><li><p><strong>Invest Regularly in Your Knowledge Portfolio 定期为你的知识资产投资</strong></p><p>管理知识资产与管理金融资产非常相似：</p><ul><li>严肃的投资者定期投资——作为习惯<ul><li>就像金融投资一样，你必须定期为你的知识资产投资。即使投资量很小，习惯自身也和总量一样重要</li></ul></li><li>多元化是长期成功的关键<ul><li>你知道的不同的事情越多，你就越有价值。作为底线，你需要知道你目前所用的特 定技术的各种特性。但不要就此止步。计算技术的面貌变化很快— —今天的热门技术明天就可能变得近平无用(或至少是不再抢手)。你掌握的技术越多，你就越能更好地进行调整， 赶上变化 。</li></ul></li><li>聪明的投资者在保守的投资和高风险、高回报的投资之间平衡他们的资产<ul><li>从高风险、可能有高回报，到低风险、低回报，技术存在于这样一条谱带上。把 你所有的金钱都投入可能突然崩盘的高风险股票并不是 一个好主意;你也不应太保守，错过可能的机会。不要把你所有的技术鸡蛋放在一个篮子里</li></ul></li><li>投资者设法低买高卖，以获取最大回报<ul><li>在新兴的技术流行之前学习它可能就和找到被低估的股票—样困难，但所得到的 就和那样的股票带来的收益一样。在Java 刚出现时学习它可能有风险，但对于现在已步入该领域的顶尖行列的早期采用者，这样做得到了非常大的回报。</li></ul></li><li>应周期性的重新评估和平衡资产<ul><li>这是一个非常动荡的行业。你上个月开始研究的热门技术现在也许已像石头一样冰冷。也许你需要重温你有一阵子没有使用的数据库技术。又或许，如果你之前试用过另一种语言，你就会更有可能获得那个新职位……</li></ul></li></ul></li><li><p><strong>Critically Analyze What You Read and Hear 批判地分析你读到的和听到的</strong></p></li><li><p><strong>It’s Both What You Say and the Way You Say It 你说什么和你怎么说同样重要</strong></p></li></ul><h3 id="a-pragmatic-approach"><a class="markdownIt-Anchor" href="#a-pragmatic-approach"></a> A pragmatic approach</h3><ul><li><p><strong>Make It Easy to Reuse 让复用变得容易</strong></p><p>你所要做的是营造 一种环境，在其中要找到并复用已有的东西，比自己编写更容易。如果不容易，大家就不会去复用。而如果不进行复用，你们就会有重复知识的风险。</p></li><li><p><strong>Eliminate Effects Between Unrelated Things 消除无关事物之间的影响</strong></p><p>如果你编写正交的系统，你得到两个主要好处:提高生产率与降低风险</p></li><li><p><strong>There Are No Final Decisions 不存在最终决策</strong></p><p>错误在于假定决策是浇铸在石头上的— 同时还在于没有为可能出现的意外事件做准备。 要把决策视为是写在沙滩上的，而不要把它们刻在石头上。大浪随时可能到来，把它们抹去。</p></li><li><p><strong>Use Tracer Bullets to Find the Target 用曳光弹找到目标</strong></p><p>曳光弹行之有效，是因为它们与真正的子弹在相同的环境、相同的约束下工作。它们快速飞 向目标，所以枪手可以得到即时的反馈。同时，从实践的角度看，这样的解决方案也更便宜。 为了在代码中获得同样的效果，我们要找到某种东西，让我们能快速、直观和可重复地从需求出发，满足最终系统的某个方面要求</p></li><li><p>Prototype to Learn 为了学习而制作原型<br />在构建原型时，你可以忽略哪些细节？</p><ul><li>正确性：你也许可以在适当的地方使用虚设的数据</li><li>完整性：原型也许只能在非常有限的意义上工作，也许只有一项预先选择的输人数据和一个菜单项。</li><li>健壮性。错误检查很可能不完整，或是完全没有。如果你偏离预定路径，原型就可能崩溃， 并在“烟火般的灿烂显示中焚毁”。这没有关系。</li><li>风格。在纸上承认这一点让人痛苦，但原型代码可能没有多少注释或文档。根据使用原型的经验，你也许会撰写出大量文档，但关于原型系统自身的内容相对而言却非常少。</li></ul></li><li><p>Program Close to the Problem domain 靠近问题领域编程<br />无论是用于配置和控制应用程序的简单语言，还是用于指定规则或过程的更为复杂的语言， 我们认为，你都应该考虑让你的项目更靠近问题领域。通过在更高的抽象层面上编码，你获得了 专心解决领域问题的自由，并且可以忽略琐碎的实现细节。<br />记住，应用有许多用户。有最终用户，他们了解商业规则和所需输出;也有次级用户：操作人员、配置与测试管理人员、支持与维护程序员，还有将来的开发者。他们都有各自的问题领域， 而你可以为他们所有人生成小型环境和语言。</p></li><li><p>Estimate to Avoid Surprises 估算，以避免发生意外</p></li><li><p>Iterate the Schedule with the Code 通过代码对进度表进行迭代<br />一 开始，你对需要多少次迭代、或是需要多少时间，也许只有模糊的概念。有些方法要求你 把这个作为初始计划的一部分定下来，但除了最微不足道的项目，这是 一个错误。除非你在开发与前一个应用类似的应用，拥有同样的团队和同样的技术，否则，你就只不过是在猜想。 于是你完成了初始功能的编码与测试，并将此标记为第 一轮增量开发的结束。基于这样的经 验，你可以提炼你原来对迭代次数，以及在每次选代中可以包含的内容的猜想。提炼会变得一次 比 一次好，对进度表的信心也将随之增长。</p></li></ul><h3 id="the-basic-tools"><a class="markdownIt-Anchor" href="#the-basic-tools"></a> The Basic Tools</h3><ul><li><p>Keep Knowledge in Plain Text 用纯文本保存知识</p></li><li><p>Use the Power of Command Shells 利用命令 shell 的力量</p></li><li><p>Use a Single Editor Well 用好一种编辑器<br />选一种编辑器，彻底了解它 ，并将其用于所有的编辑任务。如果你用一种编辑器(或一组键 绑定)进行所有的文本编辑活动，你就不必停下来思考怎样完成文本操纵:必需的键击将成为本能反应。编辑器将成为你双手的延伸;键会在滑过文本和思想时歌唱起来。这就是我们的目标。</p></li><li><p>Always Use Source Code Control 总是使用源码控制<br />总是。即使你的团队只有你一个人，你的项目只需一周时间;即使那是“用过就扔” 的原型; 即使你的工作对象并非源码;确保每样东西都处在源码控制之下——文档、电话号码表、给供应商的备忘录、makefie、构建与发布流程、烧制CD母盘的shell小脚本— 每样东西。我们例行 公事地对我们敲人的每一样东西进行源码控制(包括本书的文本)。即使我们不是在开发项目， 我们的日常工作也被安全地保存在仓库中。</p></li><li><p>Fix the Problem, Not the Blame 要修正问题，而不是发出指责<br />发现了他人的bug之后，你可以花费时间和精力去指责让人厌恶的肇事者。在有些工作环境 中，这是文化的一部分，并且可能是“疏通剂”。但是，在技术竞技场上，你应该专注于修正问题，而不是发出指责。</p></li><li><p>Don’t Panic 不要恐慌<br />人很容易恐慌，特别是如果你正面临最后期限的到来、或是正在设法找出bug的原因，有一个神经质的老板或客户在你的脖子后面喘气。但非常重要的事情是，要后退一步，实际思考什么可能造成你认为表征了bug的那些症状。</p></li><li><p>“Select” Isn’t Broken “Select 没有问题”<br />我们参加过一个项目的开发，有位高级工程师确信select 系统调用在Solaris 上有问题。再多 的劝说或逻辑也无法改变他的想法(这台机器上的所有其他网络应用都工作良好这一事实也一样无济于事)。他花了数周时间编写绕开这一问题的代码，因为某种奇怪的原因，却好像并没有解决问题。当最后被迫坐下来、阅读关于select 的文档时，他在几分钟之内就发现并纠正了问题。<mark><mark>现在每当有人开始因为很可能是我们自己的故障而抱怨系统时，我们就会使用“select 没有问题” 作为温和的提醒。</mark></mark></p><p>如果你“只改动了一样东西”，系统就停止了工作，那样东西很可能就需要对此负责— 直接地或间接地，不管那看起来有多牵强。有时被改动的东西在你的控制之外 :OS 的新版本、编译器、数据库或是其他第三方软件都可能会毁坏先前的正确代码 。可能会出现新的bug。你先前 已绕开的bug得到了修正，却破坏了用于绕开它的代码。API 变了，功能变了;简而言之，这是全新的局面，你必须在这些新的条件下重新测试系统。所以在考虑升级时要紧盯着进度表;你可能会想等到下一次发布之后再升级。</p></li><li><p>Don’t Assume it —— Prove It 不要假定，要证明<br />某样东西出错时，你感到吃惊的程度与你对正在运行的代码的信任及信心成正比。 这就是为什么，在面对“让人吃惊” 的故障时，你必须意识到你的 一个或更多的假设是错的。不 要因为你“知道” 它能工作而轻易放过与bug有牵连的例程或代码。证明它。用这些数据、这些边界条件、在这个语境中证明它。</p></li><li><p>Learn a Text Manipulation Language 学习一种文本操纵语言</p></li><li><p>Write Code That Writes Code 编写能编写代码的代码<br />被动代码生成器只运行 一次来生成结果。然后结果就变成了独立的— 它与代码生成器分离 了。<br />主动代码生成器在每次需要其结果时被使用。结果是用过就扔的——它总是能由代码生成器重新生成。主动代码生成器为了生成其结果，常常要读取某种形式的脚本或控制文件。</p></li></ul><h3 id="pragmatic-paranoia"><a class="markdownIt-Anchor" href="#pragmatic-paranoia"></a> Pragmatic Paranoia</h3><ul><li><p>You Can’t Write Perfect Software 你不可能写出完美的软件</p></li><li><p>Design with Contracts 通过合约进行设计</p></li><li><p>Crash Early 早崩溃<br />我们很容易掉进“它不可能发生” 这样 —种心理状态。我们中的大多数人编写的代码都不检 查文件是否能成功关闭，或者某个跟踪语句是否已按照我们的预期写出。而如果所有的事情都能 如我们所愿，我们很可能就不需要那么做— 这些代码在任何正常的条件都不会失败。但我们是 在防卫性地编程，我们在程序的其他部分中查找破坏堆栈的“淘气指针”，我们在检查确实加载了共享库的正确版本。<br />所有的错误都能为你提供信息。你可以让自己相信错误不可能发生，并选择忽略它。但与此 相反，注重实效的程序员告诉自己，如果有 一个错误，就说明非常、非常糟糕的事情已经发生了。</p></li><li><p>If It Can’t Happen, Use Assertions to Ensure That It Won’t 如果他不可能发生，用断言确保他不会发生<br />无论何时你发现自己在思考“但那当然不可能发生”，增加代码检查它。最容易的办法是使 用断言。</p></li><li><p>Use Exceptions for Exceptional Problems 将异常用于异常的问题<br />关于异常的问题之一是知道何时使用它们。我们相信，异常很少应作为程序的正常流程的一 部分使用;异常应保留给意外事件。假定某个未被抓住的异常会终止你的程序，问问你自己:“如 果我移走所有的异常处理器，这些代码是否仍然能运行?” 如果答案是“否”，那么异常也许就 正在被用在非异常的情形中。</p></li><li><p>Finish What You Start 要有始有终<br />只要在编程，我们都要管理资源:内存、事务、线程、文件、定时器— 一所有数量有限的事 物。大多数时候，资源使用遵循一种可预测的模式:你分配资源、使用它，然后解除其分配。<br />但是，对于资源分配和解除分配的处理，许多开发者没有始终如 一的计划。</p></li></ul><h3 id="bend-or-break"><a class="markdownIt-Anchor" href="#bend-or-break"></a> Bend, or Break</h3><ul><li><p>Minimize Coupling Between Modules 使模块之间的耦合减至最少<br />应该直接要求提供你所需的东西，而不是自行“挖通” 调用层次。函数的得墨忒耳法则试图使任何给定程序中的模块之间的耦合减至最少。它设法阻止 你为了获得对第三个对象的方法的访问而进入某个对象</p></li><li><p>Configure, Don’t Integrate 要配置，不要集成<br />我们想要让我们的系统变得高度可配置。不仅是像屏幕颜色和提示文本这样的事物，而 且也包括诸如算法、数据库产品、中间件技术和用户界面风格之类更深层面的选择。这些选择应该 作为配置选项、而不是通过集成或工程(engineering)实现。要用元数据(meta data)描述应用的配置选项:调谐参数、用户偏好(user preference)、安装目录，等等。</p></li><li><p>Put Abstractions in Code, Details in Metadata 将抽象放进代码，细节放进元数据</p><ul><li>它迫使你解除你的设计的耦合，从而带来更灵活、可适应性更好的程序。</li><li>它迫使你通过推迟细节处理，创建更健壮、更抽象的设计— 完全推迟到程序之外。</li><li>无需重新编译应用，你就可以对其进行定制。你还可以利用这 一层面的定制，轻松地绕开正在运行的产品系统中的重大bug。</li><li>与通用的编程语言的情况相比，可以通过 一种大为接近问题领域的方式表示元数据。</li><li>你甚至还可以用相同的应用引擎 —但是用不同的元数据— —实现若干不同的项目。</li></ul></li><li><p>Analyze Workflow to Improve Concurrency 分析工作流，以改善并发性<br />我们需要容许并发，并考虑解除任何时间或次序上的依赖。这样做，我们可以获得灵活性， 并减少许多开发领域中的任何基于时间的依赖：工作流分析、架构、设计、还有部署。</p></li><li><p>Design Using Services 用服务进行设计<br />在饥饿的消费者模型中，你用一些独立的消费者任务和 一个集中式工作队列取代中央调度 〈 154] 器。各个消费者任务从工作队列中抓取一项，并对其进行处理。当各个任务完成其工作时，就回 到队列抓取下一项。这样，如果任何特定的任务陷入停顿，其他任务可以利用这 一空闲，并且各 个组件都可按自己的步伐前进。每个组件都在时间上解除了与其他组件的耦合。</p></li><li><p>Always Design for Concurrency 总是为并发进行设计</p></li><li><p>Separate Views from Models 使视图与模型分离</p></li><li><p>Use Blackboards to Coordinate Workflow</p></li></ul><h3 id="while-you-are-coding"><a class="markdownIt-Anchor" href="#while-you-are-coding"></a> While You Are Coding</h3><ul><li>Don’t Program by Coincidence 不要靠巧合编程<br />巧合可以在所有层面上让人误人歧途—从生成需求直到测试。特别是测试，充满了虚假的 因果关系和巧合的输出。很容易假定X是Y的原因，但正如我们之前所说的:不要假定，要证明。 在所有层面上，人们都在头脑里带着许多假定工作—一但这些假定很少被记人文档，而且在不同的开发者之间常常是冲突的。并非以明确的事实为基础的假定是所有项目的祸害。</li><li></li></ul><h2 id="调试"><a class="markdownIt-Anchor" href="#调试"></a> 调试</h2><blockquote><p>这是痛苦的事：<br />看着你自己的烦忧，并且知道<br />不是别人，而是你自己一人所致<br />——索福克勒斯：《埃阿斯》</p></blockquote><h3 id="调试的心理学"><a class="markdownIt-Anchor" href="#调试的心理学"></a> 调试的心理学</h3><p>要接受事实:调试就是解决问题，要据此发起进攻。<br />bug 是你的过错还是别人的过错，并不是真的很有关系。它仍然是你的问题。</p><h3 id="调试的思维方式"><a class="markdownIt-Anchor" href="#调试的思维方式"></a> 调试的思维方式</h3><blockquote><p>最容易欺骗的人就是自己<br />—— Edward Bulwer-Lytton, <em>The Disowned</em></p></blockquote><p>在你开始调试之前，选择恰当的思维方式十分重要。你须要关闭每天用于保护自我(ego) 的许多防卫措施，忘掉你可能面临的任何项目压力，并让自己放松下来。</p><p>在调试时小心“近视”。要抵制只修正你看到的症状的急迫愿望:更有可能的情况是，实际 的故障离你正在观察的地方可能还有几步远，并且可能涉及许多其他的相关事物。要总是设法找 出问题的根源，而不只是问题的特定表现。</p><h3 id="从何处开始"><a class="markdownIt-Anchor" href="#从何处开始"></a> 从何处开始</h3><p>在开始查看bug之前，要确保你是在能够成功编译的代码上工作——没有警告。我们例行公 事地把编译器警告级设得尽可能高。把时间浪费在设法找出编译器能够为你找出的问题上没有意义!我们需要专注于手上更困难的问题。</p><ul><li>你也许需要与报告bug 的用户面谈，以搜集比最初给你的数据更多的数据</li><li>人工合成的测试不能足够地演练 (exercise)应用 。 你必须既强硬地测试边界条件，又测试现实中的最终用户的使用模式。你需要系统地进行这样的测试。</li></ul><h3 id="造成惊讶的要素"><a class="markdownIt-Anchor" href="#造成惊讶的要素"></a> 造成惊讶的要素</h3><p>当你遇到让人吃惊的bug时，除了只是修正它而外，你还需要确定先前为什么没有找出这个 故障。考虑你是否需要改进单元测试或其他测试，以让它们有能力找出这个故障。</p><p>还有，如果bug是一些坏数据的结果，这些数据在造成爆发之前传播通过了若千层面，看一 看在这些例程中进行更好的参数检查是否能更早地隔离它。</p><p>在你对其进行处理的同时，代码中是否有任何其他地方容易受这同 一个bug的影响?现在就是 找出并修正它们的时机。确保无论发生什么，你都知道它是否会再次发生。</p><p>如果修正这个bug需要很长时间，问问你自己为什么。你是否可以做点什么，让下一次修正 这个bug变得更容易?也许你可以内建更好的测试挂钩，或是编写日志文件分析器。</p><p>最后，如果bug 是某人的错误假定的结果，与整个团队一起讨论这个问题。如果 一个人有误 解，那么许多人可能也有。</p><p>去做所有这些事情，下一次你就将很有希望不再吃惊。</p><h2 id="others"><a class="markdownIt-Anchor" href="#others"></a> Others</h2><p>下面是一些你可以在架构原型中寻求解答的具体问题:</p><ul><li>主要组件的责任是否得到了良好定义?是否适当?</li><li>主要组件间的协作是否得到了良好定义?</li><li>耦合是否得以最小化?</li><li>你能否确定重复的潜在来源?</li><li>接又定义和各项约束是否可接受?</li><li>每个模块在执行过程中是否能访问到其所需的数据?是否能在需要时进行访问?<br />根据我们制作原型的经验，最后一项往往会产生最让人惊讶和最有价值的结果。</li></ul><table><thead><tr><th>如果这听起来像你…</th><th>那么考虑…</th></tr></thead><tbody><tr><td>我使用许多不同的编辑器，但只使用其基本特性</td><td>选一种强大的编辑器，好好学习他</td></tr><tr><td>我有最喜欢的编辑器，但不使用其全部特性</td><td>学习他们。减少你需要敲击的键数</td></tr><tr><td>我有最喜欢的编辑器，只要可能就使用它</td><td>设法扩展它，并将其用于比现在更多的任务</td></tr></tbody></table><h3 id="代码生成器"><a class="markdownIt-Anchor" href="#代码生成器"></a> 代码生成器</h3><p>无论何时你发现自己在设法让两种完全不同的环境 一起工作，你都应该考虑使用主动代码生 成器。</p><h3 id="按合约设计"><a class="markdownIt-Anchor" href="#按合约设计"></a> 按合约设计</h3><ul><li>前条件：为了调用例程，必须为真的条件;例程的需求。在其前条件被违反时 ，例程决不应被调用 。传递好数据是调用者的责任。</li><li>后条件： 例程保证会做的事情，例程完成时世界的状态。例程有后条件这一事实意味着它会结束 :不允许有无限循环。</li><li>类不变项 (class invariant)。类确保从调用者的视角来看，该条件总是为真。在例程的内部处理过程中，不变项不一定会保持，但在例程退出、控制返回到调用者时，不变项必须为真 (注意，类不能给出无限制的对参与不变项的任何数据成员的写访问)。</li></ul><h3 id="嵌套的分配"><a class="markdownIt-Anchor" href="#嵌套的分配"></a> 嵌套的分配</h3><p>对于一次需要不只一个资源的例程，可以对资源分配的基本模式进行扩展。有两个另外的建议:</p><ul><li>以与资源分配的次序相反的次序解除资源的分配。这样，如果一个资源含有对另一个资源的引用，你就不会造成资源被遗弃。</li><li>在代码的不同地方分配同一组资源时，总是以相同的次序分配它们。这将降低发生死锁的可能性。(如果进程A申请了resource2 ，并正要申请resource2，而进程B申请了resource2， 并试图获得resource1 ，这两个进程就会永远等待下去。)</li><li>无论是谁分配的资源，它都应该负责解除该资源的分配</li></ul><h3 id="函数的得墨忒耳法则"><a class="markdownIt-Anchor" href="#函数的得墨忒耳法则"></a> 函数的得墨忒耳法则</h3><p>![[Pasted image 20241003142407.png]]<br />使用得墨忒耳法则将使你的代码适应性更好、更健壮，但也有代价 :作为“总承包人”，你的模块必须直接委托并管理全部子承包人，而不牵涉你的模块的客户。在实践中，这意味着你将 会编写大量包装方法，它们只是把请求转发给被委托者。这些包装方法既会带来运行时代价，也 会带来空间开销，在有些应用中，这可能会有重大影响— 甚至会让你无法承受。</p><p>与任何技术一样，你必须平衡你的特定应用的各种正面因素和负面因素。在数据库schema 设 计中，常常会为了改善性能而对schema进行“反规范化”:违反规范化规则，以换取速度。在这 里也可进行类似的折衷。事实上，通过反转得墨忒耳法则，使若干模块紧密耦合，你可以获得重 大的性能改进。只要对于那些被耦合在 一起的模块而言，这是众所周知的和可以接受的，你的设计就没有问题。</p><h3 id="为并发进行设计"><a class="markdownIt-Anchor" href="#为并发进行设计"></a> 为并发进行设计</h3><p>首先，必须对任何全局或静态变量加以保护，使其免于并发访问。现在也许是问问你自己、 你最初为何需要全局变量的好时候。此外，不管调用的次序是什么，你都需要确保你给出的是一致的状态信息。例如，何时查询你的对象的状态才是有效的?如果你的对象在某些调用之间处在无效状态，你也许就是在依赖一个巧合:没有人会在那个时间点调用你的对象。<br />假定你有一个窗口子系统，其中的widget 是先创建，再显示在显示屏上，分两个步骤进行。在其显示出来之前，你不能设置 widget 中的状态。取决于代码的设置方式，你可能会依靠这样一个事实：在你将其显示在屏幕上之前，其他对象都不会使用已创建的widget。<br />但这在并发系统中可能并不为真。在被调用时，对象必须总是处在有效的状态中，而且它们可能会在最尴尬的时候被调用。你必须确保，在任何可能被调用的时刻，对象都处在有效的状态中。这 一问题常常出现在构造器与初始化例程分开定义的类中(构造器没有使对象进入已初始化状态)。</p><h3 id="发布-订阅模式"><a class="markdownIt-Anchor" href="#发布-订阅模式"></a> 发布-订阅模式</h3><p>尽管在典型情况下，MVC是在GUI 开发的语境中教授的，它其实是一种通用的编程技术。 视图是对模型(也许是其子集)的一种解释——它无需是图形化的。控制器更是 一种协调机制， 不一定要与任何种类的输入设备有关。</p><ul><li>模型：表示目标对象的抽象数据模型。模型对任何视图或控制器都没有直接的了解。</li><li>视图：解释模型的方式。它订阅模型中的变化和来自控制器的逻辑事件。</li><li>控制器：控制视图、并向模型提供新数据的途径。它既向模型、也向视图发布事件。<br />黑板方法的 一些关键特性是:</li><li>没有侦探需要知道其他任何侦探的存在—他们查看黑板，从中了解新的信息，并且加上他们的发现。</li><li>侦探可能接受过不同的训练 ，具有不同程度的教育背景和专业经验，甚至有可能不是在同一 管辖区工作。他们都渴望破案，但这就是全部共同点。</li><li>在这个过程中，不同的侦探可能会来来去去，并且工作班次也可能不同。</li><li>对放在黑板上的内容没有什么限制。可以是图片、判断、物证，等等。<br />黑板。数据到达的次序无关紧要：在收到某项事实时，它可以触发适当的规则。反馈也很容易处理：任何规则集的输出都可以张贴到黑板上，并触发更为适用的规则。</li></ul><h3 id="实现的偶然"><a class="markdownIt-Anchor" href="#实现的偶然"></a> 实现的偶然</h3><ul><li>它也许不是真的能工作——它也许只是看起来能工作。</li><li>你依靠的边界条件也许只是一个偶然。在不同的情形下(或许是不同的屏幕分辨率)，它的表现可能就会不同。</li><li>没有记入文档的行为可能会随着库的下一次发布而变化。</li><li>多余的和不必要的调用会使你的代码变慢。</li><li>多余的调用还会增加引人它们自己的新bug 的风险。<br />对于你编写给别人调用的代码，良好的模块化以及把实现隐藏在撰写了良好文档的小接口之后，这样 一些基本原则都能对你有帮助。</li></ul><h3 id="怎样深思熟虑的编程"><a class="markdownIt-Anchor" href="#怎样深思熟虑的编程"></a> 怎样深思熟虑的编程</h3><p>我们想要让编写代码所花的时间更少，想要尽可能在开发周期的早期抓住并修正错误，想要 在一开始就少制造错误。如果我们能深思熟虑地编程，那对我们会有所帮助:</p><ul><li>总是意识到你在做什么。</li><li>不要盲目地编程。试图构建你不完全理解的应用，或是使用你不熟悉的技术，就是希望自己被巧合误导。</li><li>按照计划行事，不管计划是在你的头脑中，在鸡尾酒餐巾的背面，还是在某个CASE 工具生成的墙那么大的输出结果上。</li><li>依靠可靠的事物。不要依靠巧合或假定。如果你无法说出各种特定情形的区别，就假定是最坏的。</li><li>为你的假定建立文档。“按合约设计” 有助于澄清你头脑中的假定，并且有助于把它们传达给别人。</li><li>不要只是测试你的代码，还要测试你的假定。不要猜测;要实际尝试它。编写断言测试你的假设。如果你的断言是对的，你就改善了代码中的文档。如果你发现你的假定是错的，那么就为自己庆幸吧。</li><li>为你的工作划分优先级。把时间花在重要的方面;很有可能，它们是最难的部分。如果你的基本原则或基础设施不正确，再花哨的铃声和又哨也是没有用的。</li><li>不要做历史的奴隶。不要让已有的代码支配将来的代码。如果不再适用，所有的代码都可被替换。即使是在一个程序中，也不要让你已经做完的事情约束你下一步要做的事情 —— 准备好进行重构。这一决策可能会影响项目的进度。我们的假定是其影响将小于不进行改动造成的影响”。<br />所以下次有什么东西看起来能工作，而你却不知道为什么，要确定它不是巧合。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;intro&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#intro&quot;&gt;&lt;/a&gt; Intro&lt;/h2&gt;
&lt;p&gt;在《程序员修炼之道》一书中，Dave 和Andy将告诉我们怎样以一种我们能够遵循的方式编程。他们何以能这样聪明?他们不也是和其</summary>
      
    
    
    
    
    <category term="book" scheme="http://example.com/tags/book/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to use Hexo Theme Keep</title>
    <link href="http://example.com/2024/09/25/Welcome%20to%20use%20Hexo%20Theme%20Keep/"/>
    <id>http://example.com/2024/09/25/Welcome%20to%20use%20Hexo%20Theme%20Keep/</id>
    <published>2024-09-25T05:26:08.611Z</published>
    <updated>2024-10-06T03:08:10.626Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to use Hexo Theme Keep.</p><p>This is your very first post. Check <a class="link"   href="https://keep-docs.xpoet.cn/" >documentation<i class="fas fa-external-link-alt"></i></a> for more info. If you get any problems when using Keep theme, you can ask me on <a class="link"   href="https://github.com/XPoet/hexo-theme-keep/issues" >GitHub<i class="fas fa-external-link-alt"></i></a>.</p><span id="more"></span><p><img                         lazyload                       alt="image"                       data-src="/images/keep-slogan.svg"                        alt="keep-slogan"                  ></p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/writing.html" >Writing<i class="fas fa-external-link-alt"></i></a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/server.html" >Server<i class="fas fa-external-link-alt"></i></a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/generating.html" >Generating<i class="fas fa-external-link-alt"></i></a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a class="link"   href="https://hexo.io/docs/one-command-deployment.html" >Deployment<i class="fas fa-external-link-alt"></i></a></p><h3 id="embed-pdf"><a class="markdownIt-Anchor" href="#embed-pdf"></a> Embed pdf</h3><div class="row">    <embed src="https://cdn.jsdelivr.net/gh/amor-mio-de-mi-vida/document/paper/MLSys-2024/MLSys-2024-hetegen-efficient-heterogeneous-parallel-inference-for-large-language-models-on-resource-constrained-devices-Paper-Conference.pdf" width="100%" height="550" type="application/pdf"></div><h3 id="embed-html"><a class="markdownIt-Anchor" href="#embed-html"></a> Embed html</h3><iframe src="https://keep.xpoet.cn/" width="857" height="700"></iframe>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to use Hexo Theme Keep.&lt;/p&gt;
&lt;p&gt;This is your very first post. Check &lt;a class=&quot;link&quot;   href=&quot;https://keep-docs.xpoet.cn/&quot; &gt;documentation&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt; for more info. If you get any problems when using Keep theme, you can ask me on &lt;a class=&quot;link&quot;   href=&quot;https://github.com/XPoet/hexo-theme-keep/issues&quot; &gt;GitHub&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    <category term="Hexo" scheme="http://example.com/categories/Hexo/"/>
    
    
    <category term="Hexo" scheme="http://example.com/tags/Hexo/"/>
    
    <category term="Keep" scheme="http://example.com/tags/Keep/"/>
    
  </entry>
  
  <entry>
    <title>Welcome to use Hexo Theme Keep</title>
    <link href="http://example.com/2022/10/25/riscv/simulator/survey/"/>
    <id>http://example.com/2022/10/25/riscv/simulator/survey/</id>
    <published>2022-10-25T03:40:36.000Z</published>
    <updated>2024-10-06T09:32:35.420Z</updated>
    
    <content type="html"><![CDATA[<h1 id="paper"><a class="markdownIt-Anchor" href="#paper"></a> Paper</h1><p>Date: June 27, 2019.</p><p>title: A Survey of Computer Architecture Simulation Techniques and Tools</p><p>contribution:</p><ul><li>Providing an up-to-date survey of computer architecture simulation techniques and simulators.</li><li>Categorizing, analyzing and comparing various computer architecture simulators, which can help the community to understand the use-cases of different simulation tools.</li><li>Providing detailed characteristics and experimental error comparison of six modern x86 computer architecture simulators: gem5 [2], Multi2sim [3], MARSSx86 [4], PTLsim [5], Sniper [6], and ZSim [7].</li><li>Reviewing the most important challenges for architecture simulators and the solutions that have been proposed to resolve those issues</li></ul><p>classification:</p><ul><li><mark>Functional simulators</mark><br />A functional simulator implements the architecture only and focuses on achieving the same functionality of the modeled <a class="link"   href="http://architecture.In" >architecture.In<i class="fas fa-external-link-alt"></i></a> other words, functional simulators behave like emulators (emulate the behavior of target’s instruction set architecture (ISA)).</li><li><mark>Timing simulators</mark>, also known as performance simulators, simulate the microarchitecture of processors<ul><li><mark>Cycle-level Simulators</mark>: Cycle-level simulators simulate an architecture by imitating the operation of the simulated processor for each cycle.</li><li><mark>Event-driven Simulators</mark>: An event-driven simulator simulates a target based on events instead of cycles. Usually, they make use of event queues. Simulation jumps to the time when an event is scheduled, based on the event queues, instead of going through all cycles.</li><li><mark>Interval Simulators</mark>:  regular instruction flow through the pipeline can be broken down into sets of intervals based on miss events (cache misses, branch mis-predictions). Special purpose portions of architectural simulators, like branch predictors and memory system, can be used to simulate the miss events and find their exact timings. Then, these timings along with an analytical model are used to estimate the duration for every interval of instructions.</li></ul></li></ul><p>To simplify the development and reduce its complexity, often simulators decouple functional and timing (performance) simulation.<br /><img                         lazyload                       alt="image"                       data-src="Pasted%20image%2020240929164942.png"                        alt=""                  ></p><h3 id="timing-directed-simulator"><a class="markdownIt-Anchor" href="#timing-directed-simulator"></a> Timing-directed simulator</h3><p>In this category, a functional simulator <mark>records the architectural state</mark> (e.g. register and memory values) of the processor being simulated. The timing simulator, which has no idea of data values on its own, takes and uses these values from the functional simulator to perform a specific task when required. The functional model and the timing models interact heavily in this type of simulators as the timing model directs the functional model and the functional model feeds values to the timing model. This interaction makes this simulation model suitable for modeling architectures with dynamically changing functional behavior, such as multicore architectures. For example, for a load instruction the functional model computes the instruction’s effective address, and the timing model uses this address to determine if the load is causing a cache miss. The returned value from the cache or the memory, will eventually be read by the functional simulator.</p><h3 id="functional-first-simulators"><a class="markdownIt-Anchor" href="#functional-first-simulators"></a> Functional-first simulators</h3><p><mark>the functional simulator runs prior to the timing simulator and generates an instruction trace (a stream of instructions) that feeds the timing simulator at runtime.</mark> In the case of conditional branches, the functional simulator always follows the correct path and it cannot simulate the behavior of branch predictors. If there is a mispredicted branch in the timing simulator’s pipeline, the functional simulator restores its previous state before the branch and continues along the mispredicted path. Later, the pipeline has to be flushed due to this mispredicted branch. Since the timing simulator always lags behind the functional simulator, there can be ordering problems while simulating more than one thread . For instance, the time at which the functional model reads a memory value in case of a load instruction can be different from the time when the timing model requests the same value, and this can result in reading different values. This problem can be resolved by a speculative functional-first simulation. In this technique, whenever a timing model detects that the data it reads is different from the data that the functional model has read, it asks the functional model to restore the processor’s state to the state before the load instruction and then it executes the load instruction with the correct data. As, timing and functional models run in parallel, there is an opportunity to exploit this parallelism for better performance of the simulator. This type of simulators has much better performance as compared to timing-directed simulators, because it is not required for the timing model to direct the functional model at every instruction or cycle as in timing directed simulators. SimWattch is an example of functional first simulators. SimWattch integrates Simics with Wattch. Wattch is based on SimpleScalar and simulates both power and performance.</p><h3 id="timing-first-simulators"><a class="markdownIt-Anchor" href="#timing-first-simulators"></a> Timing-first simulators</h3><p>Timing-First Simulators: In this approach, timing simulators run ahead of functional simulators. Timing simulators simulate the microarchitecture of a target processor at the cycle-level. Timing simulators usually use functional simulators for verification of functional execution of all instructions. The instruction is retired in case of a match between the architectural state of both the functional and the timing simulators. In case of a mismatch, the timing simulator recovers by flushing the pipeline and restarting the instruction fetch following the problematic instruction. As such, the timing simulator makes forward progress. If these recoveries happen frequently, they can impact the simulated system’s timing, and thus accuracy, depending on the depth of the simulated pipeline.</p><p>classification:</p><h3 id="trace-driven-simulators"><a class="markdownIt-Anchor" href="#trace-driven-simulators"></a> Trace-Driven simulators</h3><p>Trace files are used as inputs to trace-driven simulators. These trace files are prerecorded streams of instructions executed by benchmarks with some fixed inputs. As benchmarks execute on real machines statistics including instruction opcodes, data addresses, branch target addresses, etc are recorded in a trace file. Trace-driven model makes the implementation of the simulator simple. Trace-driven simulators can be easily debugged because experimental results can be reproduced. The size of trace files can be huge, which poses limits on the total instruction count in each trace file and/or the number of trace files used at once, and may lead to a slower simulation time [33], [57]. Different trace sampling and trace reduction techniques [58], are used to resolve the problem of large size of trace files. Apart from this, these simulators usually do not model execution of mispeculated code, which can affect performance estimation results of structures such as branch predictors. To solve the problem of branch mispredictions, techniques like reconstruction of mispredicted path [59] are used.<br />Trace-driven models do not include the run-time changes in behavior of multi-threaded applications [60]. This becomes a more visible problem if trace-driven simulation is run for a simulated multiprocessor system that is different from the one that was used to collect the trace. Trace-driven simulation should be avoided for parallel and timing-dependent systems as emphasized by Goldschmidt et al. [61].<br />Shade [62] is a trace-driven instruction set simulator, supporting SPARC and MIPS systems. Shade is also used to generate traces. Simplescalar also has the capability to run simulations from trace files. Cheetah [63] is a trace-driven simulator that simulates different cache con- figurations. MASE [64] is another example of this type of simulators. It is very hard for trace driven simulators to model the run-time changes in the behavior of multi-threaded applications [60], [61]. However, lately, few research works have been put forward to efficiently use trace-driven simulators for multi-threaded workloads, [65], [66].</p><h3 id="execution-driven-simlators"><a class="markdownIt-Anchor" href="#execution-driven-simlators"></a> Execution-Driven Simlators</h3><p>==These simulators use binaries or executables of benchmarks for simulated target machines directly. ==These simulators can simulate miss peculated instructions unlike trace-driven simulators. ==However, they are complicated as compared to trace-driven simulators. ==</p><p>Often, users are interested in the performance of selected regions of code instead of entire benchmarks. The technique of direct/native execution can help in this respect. In direct execution, <mark>simulators only simulate particular portions of code (or regions of interest) of an application and execute the rest of the application directly on the host machine.</mark> In this case, both the target and the host systems should have same instruction set architecture (ISA) to perform native execution. This technique is also referred as co-simulation.</p><p><img                         lazyload                       alt="image"                       data-src="Pasted%20image%2020240929172303.png"                        alt=""                  ><br /><img                         lazyload                       alt="image"                       data-src="Pasted%20image%2020240929172315.png"                        alt=""                  ><br /><img                         lazyload                       alt="image"                       data-src="Pasted%20image%2020240929172327.png"                        alt=""                  ></p><h2 id="challenges"><a class="markdownIt-Anchor" href="#challenges"></a> Challenges</h2><h3 id="a-slow-simulation"><a class="markdownIt-Anchor" href="#a-slow-simulation"></a> A. slow simulation</h3><ul><li>sampled simulation</li><li>statistical simulation</li><li>parallel simulation</li><li>FPGA accelerated simulation</li></ul><h3 id="bpoor-accuracy"><a class="markdownIt-Anchor" href="#bpoor-accuracy"></a> B.poor accuracy</h3><p>Potentially, there can be three different types of errors in simulators: Modeling errors, specification errors and abstraction errors.</p><ul><li><p><mark>Modeling errors occur when the desired functionality is not properly implemented or modeled in the simulator</mark>. One example of modeling errors is when instructions are con- figured to take different latencies than the modeled target. Another example can be issuing instructions to reservation stations in an out-of-order manner. Modeling errors can be reduced by carefully designing and testing the modeled structures. Errors can be further reduced using proper design strategies and software engineering principles.</p></li><li><p><mark>specification errors result from to the lack of knowledge about the correct functionality of the target.</mark> Specification errors can only be decreased if the target’s specifications documentation is accessible. If certain specifications of the real hardware are not known, writing microbenchmarks can help estimating some specifications. For example, one can estimate the size of the reservation station by writing and running a microbenchmark for different cases.</p></li><li><p>==abstraction errors occur when developers implement their design at a higher level of abstraction to tradeoff design details for a better speed, or to simplify their simulator’s implementation. ==To reduce abstraction errors, developers usually tradeoff speed; simulator writers can reduce abstraction errors by including more details in their simulation models. Today’s new technologies with faster hardware enable further reduction of abstraction errors. ==Another example of an abstraction error is not simulating incorrect speculative paths, which can reduce the accuracy of the simulator. ==</p></li><li><p>SimpleScalar</p></li><li><p>EduMIPS64</p></li><li><p>RARS</p></li><li><p>Logisim</p></li></ul><h2 id="questions"><a class="markdownIt-Anchor" href="#questions"></a> Questions</h2><ol><li>block design</li><li>Incorporating structural</li></ol><p>literature review and plan</p><ul><li>you implement  (minimum variable product)</li><li>you will do if you have time</li><li>you will not do it      ——— future time</li></ul><p>instruction set practice<br />sample projects.</p><p>what others do<br />try it out</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;paper&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#paper&quot;&gt;&lt;/a&gt; Paper&lt;/h1&gt;
&lt;p&gt;Date: June 27, 2019.&lt;/p&gt;
&lt;p&gt;title: A Survey of Computer Archite</summary>
      
    
    
    
    <category term="riscv_simulator" scheme="http://example.com/categories/riscv-simulator/"/>
    
    
    <category term="riscv" scheme="http://example.com/tags/riscv/"/>
    
  </entry>
  
</feed>
